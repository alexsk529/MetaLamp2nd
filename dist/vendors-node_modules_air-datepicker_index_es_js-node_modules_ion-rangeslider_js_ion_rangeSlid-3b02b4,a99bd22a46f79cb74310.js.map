{"version":3,"file":"vendors-node_modules_air-datepicker_index_es_js-node_modules_ion-rangeslider_js_ion_rangeSlid-3b02b4,a99bd22a46f79cb74310.js","mappings":";;;;;;;;AAAA;AACA,IAAI,KAAuD,0BAA0B,CAA4I;AACjO,CAAC;AACD;AACA;AACA;AACA;AACA,yFAAyF,0BAA0B;AACnH,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kEAAkE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qEAAqE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,OAAO;AAC3E;AACA,8EAA8E;AAC9E,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,OAAO;AAC3F;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mCAAmC,2CAA2C;AAC9E;AACA;AACA,sBAAsB,YAAY,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA,+BAA+B,uFAAuF;AACtH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B,iBAAiB,uCAAuC;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB,YAAY,kBAAkB,SAAS,4BAA4B;AAChH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kCAAkC;AACvD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,8CAA8C,yCAAyC;AACvF,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,yBAAyB,mBAAmB;AAC5C;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,yBAAyB,SAAS;AAClC;AACA;AACA,iCAAiC,sBAAsB;AACvD;AACA;AACA;AACA,iCAAiC,sBAAsB;AACvD;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oDAAoD,mBAAmB;AACvE,uBAAuB,MAAM;AAC7B;AACA,gEAAgE,8CAA8C;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB,cAAc,sBAAsB,mBAAmB;AAClG;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA,iBAAiB,yCAAyC,mBAAmB;AAC7E,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yBAAyB,mBAAmB,6CAA6C;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,yBAAyB,0BAA0B;AACnD;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,qBAAqB,eAAe,kCAAkC;AACtE,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gDAAgD;AAC9E;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B,cAAc,wBAAwB;AACxF;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,OAAO;AACnG;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA,oBAAoB,oEAAoE;AACxF,oBAAoB;AACpB;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oCAAoC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,gEAAgE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA,iBAAiB;AACjB,yBAAyB,6BAA6B;AACtD;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qCAAqC,wBAAwB,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wBAAwB;AACjD;AACA;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA,qBAAqB,wDAAwD;AAC7E;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA,6CAA6C,uBAAuB;AACpE,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,yBAAyB,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,yBAAyB,kBAAkB,MAAM,YAAY,aAAa,WAAW;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA,qBAAqB,iEAAiE,oBAAoB;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB,YAAY,8BAA8B;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,uBAAuB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,wFAAwF,OAAO;AAC/F;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA,qEAAqE,WAAW;AAChF;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA,iBAAiB;AACjB,yBAAyB,gCAAgC,gBAAgB;AACzE;AACA;AACA,sBAAsB;AACtB;AACA,iBAAiB;AACjB,yBAAyB,2BAA2B,SAAS,6CAA6C;AAC1G;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,qBAAqB,6EAA6E,SAAS;AAC3G,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,yBAAyB,qBAAqB;AAC9C;AACA,6BAA6B,mBAAmB;AAChD,2BAA2B,0CAA0C;AACrE;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,2DAA2D,mCAAmC;AAC9F;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,yBAAyB,2BAA2B;AACpD;AACA,iBAAiB;AACjB,gCAAgC;AAChC;AACA,yBAAyB,oEAAoE;AAC7F;AACA;AACA,iBAAiB;AACjB,yBAAyB,UAAU;AACnC;AACA,iBAAiB;AACjB,yBAAyB,SAAS;AAClC;AACA,iBAAiB;AACjB,yBAAyB,SAAS;AAClC;AACA,iBAAiB;AACjB,yBAAyB,WAAW;AACpC;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA,iBAAiB;AACjB,yBAAyB,sBAAsB,oBAAoB,4BAA4B,cAAc;AAC7G;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,yBAAyB,wBAAwB;AACjD;AACA,iBAAiB;AACjB,sCAAsC,4BAA4B,mBAAmB;AACrF,qBAAqB,uBAAuB;AAC5C,+VAA+V;AAC/V;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,kBAAkB;AAClB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB,8BAA8B,WAAW;AAC1D;AACA;AACA;AACA,uBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA,sCAAsC,kCAAkC;AACxE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mCAAmC,qCAAqC;AACxE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA;AACA;AACA,kBAAkB,SAAS,eAAe;AAC1C;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,kBAAkB;AAClB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;;;;AC3gD4C;AAC7C,+DAAe;;;;;;;;;;;ACDf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AACD,gBAAgB,MAAM,qBAAqB,MAAM,KAAK,UAAa,mBAAmB,wBAAU;AAChG,QAAQ,iCAAO,CAAC,yEAAQ,CAAC,mCAAE;AAC3B;AACA,SAAS;AAAA,kGAAC;AACV,MAAM,iBAAiB,MAAM,qBAAqB,MAAM;AACxD,gBAAgB,mBAAO,CAAC,oDAAQ;AAChC,MAAM;AACN,gBAAgB,MAAM;AACtB;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B,uBAAuB,QAAQ;AAC/B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;;AAEtC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,2GAA2G;;AAE3G;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;;;AAIA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;;AAEA,6CAA6C,8BAA8B,WAAW;AACtF;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,0BAA0B;AAC1B,qBAAqB,QAAQ;AAC7B,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;;;AAIT;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,0BAA0B;AAC1B,qBAAqB;AACrB;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;;;AAIT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA,cAAc;;AAEd;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;;;AAIT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,SAAS;;;;AAIT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;;;;AAKT;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,0BAA0B,UAAU;AACpC,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,2BAA2B;AAC3B,6BAA6B,QAAQ;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA,SAAS;;AAET;AACA;AACA,kCAAkC,IAAI;AACtC,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,QAAQ;AACpC;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,cAAc;;AAEd;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,iBAAiB;AACzC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,wBAAwB,SAAS;AACjC;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,wBAAwB,SAAS;AACjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB,SAAS;AACjC;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,SAAS;AACjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;;AAIT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;;AAIA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,qDAAqD;AAC5E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wDAAwD,kCAAkC;AAC1F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL,CAAC;;;;;;;;;;;;ACh5ED;AACA,IAAI,KAAuD,0BAA0B,CAA8L;AACnR,CAAC;AACD;AACA;;AAEA;AACA;AACA,4BAA4B;AAC5B;AACA;;AAEA;AACA,sDAAsD,uBAAuB;AAC7E,SAAS;AACT,gHAAgH,gBAAgB,2CAA2C,UAAU;AACrL,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,2EAA2E;AACxG,2CAA2C,kBAAkB;;AAE7D;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS,CAAC,MAAM;AAChB,KAAK;AACL,KAAK;AACL,CAAC;AACD;;;;;;;;;;;;AC9GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,gCAAgC;;AAEhC;;AAEA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,gBAAgB;AACtC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,eAAe;AAC5C;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,iCAAiC,gBAAgB;AACjD;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,2DAA2D;AAC3D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;;AAEA;AACA,OAAO;;AAEP;AACA;;AAEA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uCAAuC;;AAEvC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB;;AAEtB;AACA,sBAAsB;;AAEtB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC;AACrC;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4DAA4D,MAAM;AAClE;AACA,MAAM;AACN;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,MAAM,IAA0C;AAChD,IAAI,mCAAO;AACX;AACA,KAAK;AAAA,kGAAC;AACN;;AAEA,CAAC,QAAQ,oCAAa","sources":["webpack://webpack-practice/./node_modules/air-datepicker/air-datepicker.js","webpack://webpack-practice/./node_modules/air-datepicker/index.es.js","webpack://webpack-practice/./node_modules/ion-rangeslider/js/ion.rangeSlider.js","webpack://webpack-practice/./node_modules/item-quantity-dropdown/lib/item-quantity-dropdown.min.js","webpack://webpack-practice/./node_modules/paginationjs/dist/pagination.js"],"sourcesContent":["!function (e, t) {\r\n    \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof exports ? exports.AirDatepicker = t() : e.AirDatepicker = t()\r\n}(this, (function () {\r\n    return function () {\r\n        \"use strict\";\r\n        var e = {\r\n            d: function (t, i) {\r\n                for (var s in i) e.o(i, s) && !e.o(t, s) && Object.defineProperty(t, s, {enumerable: !0, get: i[s]})\r\n            }, o: function (e, t) {\r\n                return Object.prototype.hasOwnProperty.call(e, t)\r\n            }\r\n        }, t = {};\r\n        e.d(t, {\r\n            default: function () {\r\n                return K\r\n            }\r\n        });\r\n        var i = {\r\n            days: \"days\",\r\n            months: \"months\",\r\n            years: \"years\",\r\n            day: \"day\",\r\n            month: \"month\",\r\n            year: \"year\",\r\n            eventChangeViewDate: \"changeViewDate\",\r\n            eventChangeCurrentView: \"changeCurrentView\",\r\n            eventChangeFocusDate: \"changeFocusDate\",\r\n            eventChangeSelectedDate: \"changeSelectedDate\",\r\n            eventChangeTime: \"changeTime\",\r\n            eventChangeLastSelectedDate: \"changeLastSelectedDate\",\r\n            actionSelectDate: \"selectDate\",\r\n            actionUnselectDate: \"unselectDate\",\r\n            cssClassWeekend: \"-weekend-\"\r\n        }, s = {\r\n            classes: \"\",\r\n            inline: !1,\r\n            locale: {\r\n                days: [\"Воскресенье\", \"Понедельник\", \"Вторник\", \"Среда\", \"Четверг\", \"Пятница\", \"Суббота\"],\r\n                daysShort: [\"Вос\", \"Пон\", \"Вто\", \"Сре\", \"Чет\", \"Пят\", \"Суб\"],\r\n                daysMin: [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"],\r\n                months: [\"Январь\", \"Февраль\", \"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\", \"Сентябрь\", \"Октябрь\", \"Ноябрь\", \"Декабрь\"],\r\n                monthsShort: [\"Янв\", \"Фев\", \"Мар\", \"Апр\", \"Май\", \"Июн\", \"Июл\", \"Авг\", \"Сен\", \"Окт\", \"Ноя\", \"Дек\"],\r\n                today: \"Сегодня\",\r\n                clear: \"Очистить\",\r\n                dateFormat: \"dd.MM.yyyy\",\r\n                timeFormat: \"HH:mm\",\r\n                firstDay: 1\r\n            },\r\n            startDate: new Date,\r\n            firstDay: \"\",\r\n            weekends: [6, 0],\r\n            dateFormat: \"\",\r\n            altField: \"\",\r\n            altFieldDateFormat: \"T\",\r\n            toggleSelected: !0,\r\n            keyboardNav: !0,\r\n            selectedDates: !1,\r\n            container: \"\",\r\n            isMobile: !1,\r\n            visible: !1,\r\n            position: \"bottom left\",\r\n            offset: 12,\r\n            view: i.days,\r\n            minView: i.days,\r\n            showOtherMonths: !0,\r\n            selectOtherMonths: !0,\r\n            moveToOtherMonthsOnSelect: !0,\r\n            showOtherYears: !0,\r\n            selectOtherYears: !0,\r\n            moveToOtherYearsOnSelect: !0,\r\n            minDate: \"\",\r\n            maxDate: \"\",\r\n            disableNavWhenOutOfRange: !0,\r\n            multipleDates: !1,\r\n            multipleDatesSeparator: \", \",\r\n            range: !1,\r\n            dynamicRange: !0,\r\n            buttons: !1,\r\n            monthsField: \"monthsShort\",\r\n            showEvent: \"focus\",\r\n            autoClose: !1,\r\n            prevHtml: '<svg><path d=\"M 17,12 l -5,5 l 5,5\"></path></svg>',\r\n            nextHtml: '<svg><path d=\"M 14,12 l 5,5 l -5,5\"></path></svg>',\r\n            navTitles: {days: \"MMMM, <i>yyyy</i>\", months: \"yyyy\", years: \"yyyy1 - yyyy2\"},\r\n            timepicker: !1,\r\n            onlyTimepicker: !1,\r\n            dateTimeSeparator: \" \",\r\n            timeFormat: \"\",\r\n            minHours: 0,\r\n            maxHours: 24,\r\n            minMinutes: 0,\r\n            maxMinutes: 59,\r\n            hoursStep: 1,\r\n            minutesStep: 1,\r\n            onSelect: !1,\r\n            onChangeViewDate: !1,\r\n            onChangeView: !1,\r\n            onRenderCell: !1,\r\n            onShow: !1,\r\n            onHide: !1,\r\n            onClickDayName: !1\r\n        };\r\n\r\n        function a(e) {\r\n            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : document;\r\n            return \"string\" == typeof e ? t.querySelector(e) : e\r\n        }\r\n\r\n        function n() {\r\n            let {\r\n                tagName: e = \"div\",\r\n                className: t = \"\",\r\n                innerHtml: i = \"\",\r\n                id: s = \"\",\r\n                attrs: a = {}\r\n            } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, n = document.createElement(e);\r\n            if (t && n.classList.add(...t.split(\" \")), s && (n.id = s), i && (n.innerHTML = i), a) for (let e in a) n.setAttribute(e, a[e]);\r\n            return n\r\n        }\r\n\r\n        function r(e, t) {\r\n            for (let [i, s] of Object.entries(t)) e.setAttribute(i, s);\r\n            return e\r\n        }\r\n\r\n        function h(e) {\r\n            return new Date(e.getFullYear(), e.getMonth() + 1, 0).getDate()\r\n        }\r\n\r\n        function o(e) {\r\n            let t = e.getHours(), i = t % 12 == 0 ? 12 : t % 12;\r\n            return {\r\n                year: e.getFullYear(),\r\n                month: e.getMonth(),\r\n                fullMonth: e.getMonth() + 1 < 10 ? \"0\" + (e.getMonth() + 1) : e.getMonth() + 1,\r\n                date: e.getDate(),\r\n                fullDate: e.getDate() < 10 ? \"0\" + e.getDate() : e.getDate(),\r\n                day: e.getDay(),\r\n                hours: t,\r\n                fullHours: l(t),\r\n                hours12: i,\r\n                fullHours12: l(i),\r\n                minutes: e.getMinutes(),\r\n                fullMinutes: e.getMinutes() < 10 ? \"0\" + e.getMinutes() : e.getMinutes()\r\n            }\r\n        }\r\n\r\n        function l(e) {\r\n            return e < 10 ? \"0\" + e : e\r\n        }\r\n\r\n        function d(e) {\r\n            let t = 10 * Math.floor(e.getFullYear() / 10);\r\n            return [t, t + 9]\r\n        }\r\n\r\n        function c() {\r\n            let e = [];\r\n            for (var t = arguments.length, i = new Array(t), s = 0; s < t; s++) i[s] = arguments[s];\r\n            return i.forEach((t => {\r\n                if (\"object\" == typeof t) for (let i in t) t[i] && e.push(i); else t && e.push(t)\r\n            })), e.join(\" \")\r\n        }\r\n\r\n        function u(e, t) {\r\n            let s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : i.days;\r\n            if (!e || !t) return !1;\r\n            let a = o(e), n = o(t), r = {\r\n                [i.days]: a.date === n.date && a.month === n.month && a.year === n.year,\r\n                [i.months]: a.month === n.month && a.year === n.year,\r\n                [i.years]: a.year === n.year\r\n            };\r\n            return r[s]\r\n        }\r\n\r\n        function p(e, t, i) {\r\n            let s = g(e, !1).getTime(), a = g(t, !1).getTime();\r\n            return i ? s >= a : s > a\r\n        }\r\n\r\n        function m(e, t) {\r\n            return !p(e, t, !0)\r\n        }\r\n\r\n        function g(e) {\r\n            let t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i = new Date(e.getTime());\r\n            return \"boolean\" != typeof t || t || D(i), i\r\n        }\r\n\r\n        function D(e) {\r\n            return e.setHours(0, 0, 0, 0), e\r\n        }\r\n\r\n        function v(e, t, i) {\r\n            e.length ? e.forEach((e => {\r\n                e.addEventListener(t, i)\r\n            })) : e.addEventListener(t, i)\r\n        }\r\n\r\n        function y(e, t) {\r\n            return !(!e || e === document || e instanceof DocumentFragment) && (e.matches(t) ? e : y(e.parentNode, t))\r\n        }\r\n\r\n        function f(e, t, i) {\r\n            return e > i ? i : e < t ? t : e\r\n        }\r\n\r\n        function w(e) {\r\n            for (var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), s = 1; s < t; s++) i[s - 1] = arguments[s];\r\n            return i.filter((e => e)).forEach((t => {\r\n                for (let [i, s] of Object.entries(t)) if (void 0 !== s && \"[object Object]\" === s.toString()) {\r\n                    let t = void 0 !== e[i] ? e[i].toString() : void 0, a = s.toString(),\r\n                        n = Array.isArray(s) ? [] : {};\r\n                    e[i] = e[i] ? t !== a ? n : e[i] : n, w(e[i], s)\r\n                } else e[i] = s\r\n            })), e\r\n        }\r\n\r\n        function b(e) {\r\n            let t = e;\r\n            return e instanceof Date || (t = new Date(e)), isNaN(t.getTime()) && (console.log('Unable to convert value \"'.concat(e, '\" to Date object')), t = !1), t\r\n        }\r\n\r\n        function k(e) {\r\n            let t = \"\\\\s|\\\\.|-|/|\\\\\\\\|,|\\\\$|\\\\!|\\\\?|:|;\";\r\n            return new RegExp(\"(^|>|\" + t + \")(\" + e + \")($|<|\" + t + \")\", \"g\")\r\n        }\r\n\r\n        function C(e, t, i) {\r\n            return t in e ? Object.defineProperty(e, t, {\r\n                value: i,\r\n                enumerable: !0,\r\n                configurable: !0,\r\n                writable: !0\r\n            }) : e[t] = i, e\r\n        }\r\n\r\n        class _ {\r\n            constructor() {\r\n                let {\r\n                    type: e,\r\n                    date: t,\r\n                    dp: i,\r\n                    opts: s,\r\n                    body: a\r\n                } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\r\n                C(this, \"focus\", (() => {\r\n                    this.$cell.classList.add(\"-focus-\"), this.focused = !0\r\n                })), C(this, \"removeFocus\", (() => {\r\n                    this.$cell.classList.remove(\"-focus-\"), this.focused = !1\r\n                })), C(this, \"select\", (() => {\r\n                    this.$cell.classList.add(\"-selected-\"), this.selected = !0\r\n                })), C(this, \"removeSelect\", (() => {\r\n                    this.$cell.classList.remove(\"-selected-\", \"-range-from-\", \"-range-to-\"), this.selected = !1\r\n                })), C(this, \"onChangeSelectedDate\", (() => {\r\n                    this.isDisabled || (this._handleSelectedStatus(), this.opts.range && this._handleRangeStatus())\r\n                })), C(this, \"onChangeFocusDate\", (e => {\r\n                    if (!e) return void (this.focused && this.removeFocus());\r\n                    let t = u(e, this.date, this.type);\r\n                    t ? this.focus() : !t && this.focused && this.removeFocus(), this.opts.range && this._handleRangeStatus()\r\n                })), C(this, \"render\", (() => (this.$cell.innerHTML = this._getHtml(), this.$cell.adpCell = this, this.$cell))), this.type = e, this.singleType = this.type.slice(0, -1), this.date = t, this.dp = i, this.opts = s, this.body = a, this.customData = !1, this.init()\r\n            }\r\n\r\n            init() {\r\n                let {range: e, onRenderCell: t} = this.opts;\r\n                t && (this.customData = t({\r\n                    date: this.date,\r\n                    cellType: this.singleType,\r\n                    datepicker: this.dp\r\n                })), this._createElement(), this._bindDatepickerEvents(), this._handleInitialFocusStatus(), this.dp.hasSelectedDates && (this._handleSelectedStatus(), e && this._handleRangeStatus())\r\n            }\r\n\r\n            _bindDatepickerEvents() {\r\n                this.dp.on(i.eventChangeSelectedDate, this.onChangeSelectedDate), this.dp.on(i.eventChangeFocusDate, this.onChangeFocusDate)\r\n            }\r\n\r\n            unbindDatepickerEvents() {\r\n                this.dp.off(i.eventChangeSelectedDate, this.onChangeSelectedDate), this.dp.off(i.eventChangeFocusDate, this.onChangeFocusDate)\r\n            }\r\n\r\n            _createElement() {\r\n                let {year: e, month: t, date: i} = o(this.date);\r\n                this.$cell = n({\r\n                    className: this._getClassName(),\r\n                    attrs: {\"data-year\": e, \"data-month\": t, \"data-date\": i}\r\n                })\r\n            }\r\n\r\n            _getClassName() {\r\n                var e, t;\r\n                let s = new Date, {selectOtherMonths: a, selectOtherYears: n} = this.opts, {\r\n                        minDate: r,\r\n                        maxDate: h\r\n                    } = this.dp, {day: l} = o(this.date), d = this._isOutOfMinMaxRange(),\r\n                    p = null === (e = this.customData) || void 0 === e ? void 0 : e.disabled,\r\n                    m = c(\"air-datepicker-cell\", \"-\".concat(this.singleType, \"-\"), {\r\n                        \"-current-\": u(s, this.date, this.type),\r\n                        \"-min-date-\": r && u(r, this.date, this.type),\r\n                        \"-max-date-\": h && u(h, this.date, this.type)\r\n                    }), g = \"\";\r\n                switch (this.type) {\r\n                    case i.days:\r\n                        g = c({\r\n                            \"-weekend-\": this.dp.isWeekend(l),\r\n                            \"-other-month-\": this.isOtherMonth,\r\n                            \"-disabled-\": this.isOtherMonth && !a || d || p\r\n                        });\r\n                        break;\r\n                    case i.months:\r\n                        g = c({\"-disabled-\": d || p});\r\n                        break;\r\n                    case i.years:\r\n                        g = c({\"-other-decade-\": this.isOtherDecade, \"-disabled-\": d || this.isOtherDecade && !n || p})\r\n                }\r\n                return c(m, g, null === (t = this.customData) || void 0 === t ? void 0 : t.classes)\r\n            }\r\n\r\n            _getHtml() {\r\n                var e;\r\n                let {year: t, month: s, date: a} = o(this.date), {showOtherMonths: n, showOtherYears: r} = this.opts;\r\n                if (null !== (e = this.customData) && void 0 !== e && e.html) return this.customData.html;\r\n                switch (this.type) {\r\n                    case i.days:\r\n                        return !n && this.isOtherMonth ? \"\" : a;\r\n                    case i.months:\r\n                        return this.dp.locale[this.opts.monthsField][s];\r\n                    case i.years:\r\n                        return !r && this.isOtherDecade ? \"\" : t\r\n                }\r\n            }\r\n\r\n            _isOutOfMinMaxRange() {\r\n                let {minDate: e, maxDate: t} = this.dp, {type: s, date: a} = this, {month: n, year: r, date: h} = o(a),\r\n                    l = s === i.days, d = s === i.years,\r\n                    c = !!e && new Date(r, d ? e.getMonth() : n, l ? h : e.getDate()),\r\n                    u = !!t && new Date(r, d ? t.getMonth() : n, l ? h : t.getDate());\r\n                return e && t ? m(c, e) || p(u, t) : e ? m(c, e) : t ? p(u, t) : void 0\r\n            }\r\n\r\n            destroy() {\r\n                this.unbindDatepickerEvents()\r\n            }\r\n\r\n            _handleRangeStatus() {\r\n                let {rangeDateFrom: e, rangeDateTo: t} = this.dp, i = c({\r\n                    \"-in-range-\": e && t && (s = this.date, a = e, n = t, p(s, a) && m(s, n)),\r\n                    \"-range-from-\": e && u(this.date, e, this.type),\r\n                    \"-range-to-\": t && u(this.date, t, this.type)\r\n                });\r\n                var s, a, n;\r\n                this.$cell.classList.remove(\"-range-from-\", \"-range-to-\", \"-in-range-\"), i && this.$cell.classList.add(...i.split(\" \"))\r\n            }\r\n\r\n            _handleSelectedStatus() {\r\n                let e = this.dp._checkIfDateIsSelected(this.date, this.type);\r\n                e ? this.select() : !e && this.selected && this.removeSelect()\r\n            }\r\n\r\n            _handleInitialFocusStatus() {\r\n                u(this.dp.focusDate, this.date, this.type) && this.focus()\r\n            }\r\n\r\n            get isDisabled() {\r\n                return this.$cell.matches(\".-disabled-\")\r\n            }\r\n\r\n            get isOtherMonth() {\r\n                return this.dp.isOtherMonth(this.date)\r\n            }\r\n\r\n            get isOtherDecade() {\r\n                return this.dp.isOtherDecade(this.date)\r\n            }\r\n        }\r\n\r\n        function M(e, t, i) {\r\n            return t in e ? Object.defineProperty(e, t, {\r\n                value: i,\r\n                enumerable: !0,\r\n                configurable: !0,\r\n                writable: !0\r\n            }) : e[t] = i, e\r\n        }\r\n\r\n        let $ = {\r\n            [i.days]: '<div class=\"air-datepicker-body--day-names\"></div>' + '<div class=\"air-datepicker-body--cells -'.concat(i.days, '-\"></div>'),\r\n            [i.months]: '<div class=\"air-datepicker-body--cells -'.concat(i.months, '-\"></div>'),\r\n            [i.years]: '<div class=\"air-datepicker-body--cells -'.concat(i.years, '-\"></div>')\r\n        };\r\n\r\n        class S {\r\n            constructor(e) {\r\n                let {dp: t, type: s, opts: a} = e;\r\n                M(this, \"handleClick\", (e => {\r\n                    let t = e.target.adpCell;\r\n                    if (t.isDisabled) return;\r\n                    if (!this.dp.isMinViewReached) return void this.dp.down();\r\n                    let i = this.dp._checkIfDateIsSelected(t.date, t.type);\r\n                    i ? this.dp._handleAlreadySelectedDates(i, t.date) : this.dp.selectDate(t.date)\r\n                })), M(this, \"handleDayNameClick\", (e => {\r\n                    let t = e.target.getAttribute(\"data-day-index\");\r\n                    this.opts.onClickDayName({dayIndex: Number(t), datepicker: this.dp})\r\n                })), M(this, \"onChangeCurrentView\", (e => {\r\n                    e !== this.type ? this.hide() : (this.show(), this.render())\r\n                })), M(this, \"onMouseOverCell\", (e => {\r\n                    let t = y(e.target, \".air-datepicker-cell\");\r\n                    this.dp.setFocusDate(!!t && t.adpCell.date)\r\n                })), M(this, \"onMouseOutCell\", (() => {\r\n                    this.dp.setFocusDate(!1)\r\n                })), M(this, \"onClickBody\", (e => {\r\n                    let {onClickDayName: t} = this.opts, i = e.target;\r\n                    i.closest(\".air-datepicker-cell\") && this.handleClick(e), t && i.closest(\".air-datepicker-body--day-name\") && this.handleDayNameClick(e)\r\n                })), M(this, \"onMouseDown\", (e => {\r\n                    this.pressed = !0;\r\n                    let t = y(e.target, \".air-datepicker-cell\"), i = t && t.adpCell;\r\n                    u(i.date, this.dp.rangeDateFrom) && (this.rangeFromFocused = !0), u(i.date, this.dp.rangeDateTo) && (this.rangeToFocused = !0)\r\n                })), M(this, \"onMouseMove\", (e => {\r\n                    if (!this.pressed || !this.dp.isMinViewReached) return;\r\n                    e.preventDefault();\r\n                    let t = y(e.target, \".air-datepicker-cell\"), i = t && t.adpCell, {\r\n                        selectedDates: s,\r\n                        rangeDateTo: a,\r\n                        rangeDateFrom: n\r\n                    } = this.dp;\r\n                    if (!i || i.isDisabled) return;\r\n                    let {date: r} = i;\r\n                    if (2 === s.length) {\r\n                        if (this.rangeFromFocused && !p(r, a)) {\r\n                            let {hours: e, minutes: t} = o(n);\r\n                            r.setHours(e), r.setMinutes(t), this.dp.rangeDateFrom = r, this.dp.replaceDate(n, r)\r\n                        }\r\n                        if (this.rangeToFocused && !m(r, n)) {\r\n                            let {hours: e, minutes: t} = o(a);\r\n                            r.setHours(e), r.setMinutes(t), this.dp.rangeDateTo = r, this.dp.replaceDate(a, r)\r\n                        }\r\n                    }\r\n                })), M(this, \"onMouseUp\", (() => {\r\n                    this.pressed = !1, this.rangeFromFocused = !1, this.rangeToFocused = !1\r\n                })), M(this, \"onChangeViewDate\", ((e, t) => {\r\n                    if (!this.isVisible) return;\r\n                    let s = d(e), a = d(t);\r\n                    switch (this.dp.currentView) {\r\n                        case i.days:\r\n                            if (u(e, t, i.months)) return;\r\n                            break;\r\n                        case i.months:\r\n                            if (u(e, t, i.years)) return;\r\n                            break;\r\n                        case i.years:\r\n                            if (s[0] === a[0] && s[1] === a[1]) return\r\n                    }\r\n                    this.render()\r\n                })), M(this, \"render\", (() => {\r\n                    this.destroyCells(), this._generateCells(), this.cells.forEach((e => {\r\n                        this.$cells.appendChild(e.render())\r\n                    }))\r\n                })), this.dp = t, this.type = s, this.opts = a, this.cells = [], this.$el = \"\", this.pressed = !1, this.isVisible = !0, this.init()\r\n            }\r\n\r\n            init() {\r\n                this._buildBaseHtml(), this.type === i.days && this.renderDayNames(), this.render(), this._bindEvents(), this._bindDatepickerEvents()\r\n            }\r\n\r\n            _bindEvents() {\r\n                let {range: e, dynamicRange: t} = this.opts;\r\n                v(this.$el, \"mouseover\", this.onMouseOverCell), v(this.$el, \"mouseout\", this.onMouseOutCell), v(this.$el, \"click\", this.onClickBody), e && t && (v(this.$el, \"mousedown\", this.onMouseDown), v(this.$el, \"mousemove\", this.onMouseMove), v(window.document, \"mouseup\", this.onMouseUp))\r\n            }\r\n\r\n            _bindDatepickerEvents() {\r\n                this.dp.on(i.eventChangeViewDate, this.onChangeViewDate), this.dp.on(i.eventChangeCurrentView, this.onChangeCurrentView)\r\n            }\r\n\r\n            _buildBaseHtml() {\r\n                this.$el = n({\r\n                    className: \"air-datepicker-body -\".concat(this.type, \"-\"),\r\n                    innerHtml: $[this.type]\r\n                }), this.$names = a(\".air-datepicker-body--day-names\", this.$el), this.$cells = a(\".air-datepicker-body--cells\", this.$el)\r\n            }\r\n\r\n            _getDayNamesHtml() {\r\n                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.dp.locale.firstDay,\r\n                    t = \"\", s = this.dp.isWeekend, {onClickDayName: a} = this.opts, n = e, r = 0;\r\n                for (; r < 7;) {\r\n                    let e = n % 7,\r\n                        h = c(\"air-datepicker-body--day-name\", {[i.cssClassWeekend]: s(e), \"-clickable-\": !!a}),\r\n                        o = this.dp.locale.daysMin[e];\r\n                    t += '<div class=\"'.concat(h, \"\\\" data-day-index='\").concat(e, \"'>\").concat(o, \"</div>\"), r++, n++\r\n                }\r\n                return t\r\n            }\r\n\r\n            _getDaysCells() {\r\n                let {viewDate: e, locale: {firstDay: t}} = this.dp, i = h(e), {year: s, month: a} = o(e),\r\n                    n = new Date(s, a, 1), r = new Date(s, a, i), l = n.getDay() - t, d = 6 - r.getDay() + t;\r\n                l = l < 0 ? l + 7 : l, d = d > 6 ? d - 7 : d;\r\n                let c = function (e, t) {\r\n                    let {year: i, month: s, date: a} = o(e);\r\n                    return new Date(i, s, a - t)\r\n                }(n, l), u = i + l + d, p = c.getDate(), {year: m, month: g} = o(c), D = 0;\r\n                for (; D < u;) {\r\n                    let e = new Date(m, g, p + D);\r\n                    this._generateCell(e), D++\r\n                }\r\n            }\r\n\r\n            _generateCell(e) {\r\n                let {type: t, dp: i, opts: s} = this, a = new _({type: t, dp: i, opts: s, date: e, body: this});\r\n                return this.cells.push(a), a\r\n            }\r\n\r\n            _generateDayCells() {\r\n                this._getDaysCells()\r\n            }\r\n\r\n            _generateMonthCells() {\r\n                let {year: e} = this.dp.parsedViewDate, t = 0;\r\n                for (; t < 12;) this.cells.push(this._generateCell(new Date(e, t))), t++\r\n            }\r\n\r\n            _generateYearCells() {\r\n                let e = d(this.dp.viewDate), t = e[0] - 1, i = e[1] + 1, s = t;\r\n                for (; s <= i;) this.cells.push(this._generateCell(new Date(s, 0))), s++\r\n            }\r\n\r\n            renderDayNames() {\r\n                this.$names.innerHTML = this._getDayNamesHtml()\r\n            }\r\n\r\n            _generateCells() {\r\n                switch (this.type) {\r\n                    case i.days:\r\n                        this._generateDayCells();\r\n                        break;\r\n                    case i.months:\r\n                        this._generateMonthCells();\r\n                        break;\r\n                    case i.years:\r\n                        this._generateYearCells()\r\n                }\r\n            }\r\n\r\n            show() {\r\n                this.isVisible = !0, this.$el.classList.remove(\"-hidden-\")\r\n            }\r\n\r\n            hide() {\r\n                this.isVisible = !1, this.$el.classList.add(\"-hidden-\")\r\n            }\r\n\r\n            destroyCells() {\r\n                this.cells.forEach((e => e.destroy())), this.cells = [], this.$cells.innerHTML = \"\"\r\n            }\r\n\r\n            destroy() {\r\n                this.destroyCells(), this.dp.off(i.eventChangeViewDate, this.onChangeViewDate), this.dp.off(i.eventChangeCurrentView, this.onChangeCurrentView)\r\n            }\r\n        }\r\n\r\n        function T(e, t, i) {\r\n            return t in e ? Object.defineProperty(e, t, {\r\n                value: i,\r\n                enumerable: !0,\r\n                configurable: !0,\r\n                writable: !0\r\n            }) : e[t] = i, e\r\n        }\r\n\r\n        class F {\r\n            constructor(e) {\r\n                let {dp: t, opts: i} = e;\r\n                T(this, \"onClickNav\", (e => {\r\n                    let t = y(e.target, \".air-datepicker-nav--action\");\r\n                    if (!t) return;\r\n                    let i = t.dataset.action;\r\n                    this.dp[i]()\r\n                })), T(this, \"onChangeViewDate\", (() => {\r\n                    this.render(), this._resetNavStatus(), this.handleNavStatus()\r\n                })), T(this, \"onChangeCurrentView\", (() => {\r\n                    this.render(), this._resetNavStatus(), this.handleNavStatus()\r\n                })), T(this, \"onClickNavTitle\", (() => {\r\n                    this.dp.isFinalView || this.dp.up()\r\n                })), T(this, \"update\", (() => {\r\n                    let {prevHtml: e, nextHtml: t} = this.opts;\r\n                    this.$prev.innerHTML = e, this.$next.innerHTML = t, this._resetNavStatus(), this.render(), this.handleNavStatus()\r\n                })), T(this, \"renderDelay\", (() => {\r\n                    setTimeout(this.render)\r\n                })), T(this, \"render\", (() => {\r\n                    this.$title.innerHTML = this._getTitle(), function (e, t) {\r\n                        for (let i in t) t[i] ? e.classList.add(i) : e.classList.remove(i)\r\n                    }(this.$title, {\"-disabled-\": this.dp.isFinalView})\r\n                })), this.dp = t, this.opts = i, this.init()\r\n            }\r\n\r\n            init() {\r\n                this._createElement(), this._buildBaseHtml(), this._defineDOM(), this.render(), this.handleNavStatus(), this._bindEvents(), this._bindDatepickerEvents()\r\n            }\r\n\r\n            _defineDOM() {\r\n                this.$title = a(\".air-datepicker-nav--title\", this.$el), this.$prev = a('[data-action=\"prev\"]', this.$el), this.$next = a('[data-action=\"next\"]', this.$el)\r\n            }\r\n\r\n            _bindEvents() {\r\n                this.$el.addEventListener(\"click\", this.onClickNav), this.$title.addEventListener(\"click\", this.onClickNavTitle)\r\n            }\r\n\r\n            _bindDatepickerEvents() {\r\n                this.dp.on(i.eventChangeViewDate, this.onChangeViewDate), this.dp.on(i.eventChangeCurrentView, this.onChangeCurrentView), this.isNavIsFunction && (this.dp.on(i.eventChangeSelectedDate, this.renderDelay), this.dp.opts.timepicker && this.dp.on(i.eventChangeTime, this.render))\r\n            }\r\n\r\n            destroy() {\r\n                this.dp.off(i.eventChangeViewDate, this.onChangeViewDate), this.dp.off(i.eventChangeCurrentView, this.onChangeCurrentView), this.isNavIsFunction && (this.dp.off(i.eventChangeSelectedDate, this.renderDelay), this.dp.opts.timepicker && this.dp.off(i.eventChangeTime, this.render))\r\n            }\r\n\r\n            _createElement() {\r\n                this.$el = n({tagName: \"nav\", className: \"air-datepicker-nav\"})\r\n            }\r\n\r\n            _getTitle() {\r\n                let {dp: e, opts: t} = this, i = t.navTitles[e.currentView];\r\n                return \"function\" == typeof i ? i(e) : e.formatDate(e.viewDate, i)\r\n            }\r\n\r\n            handleNavStatus() {\r\n                let {disableNavWhenOutOfRange: e} = this.opts, {minDate: t, maxDate: s} = this.dp;\r\n                if (!t && !s || !e) return;\r\n                let {year: a, month: n} = this.dp.parsedViewDate, r = !!t && o(t), h = !!s && o(s);\r\n                switch (this.dp.currentView) {\r\n                    case i.days:\r\n                        t && r.month >= n && r.year >= a && this._disableNav(\"prev\"), s && h.month <= n && h.year <= a && this._disableNav(\"next\");\r\n                        break;\r\n                    case i.months:\r\n                        t && r.year >= a && this._disableNav(\"prev\"), s && h.year <= a && this._disableNav(\"next\");\r\n                        break;\r\n                    case i.years: {\r\n                        let e = d(this.dp.viewDate);\r\n                        t && r.year >= e[0] && this._disableNav(\"prev\"), s && h.year <= e[1] && this._disableNav(\"next\");\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n\r\n            _disableNav(e) {\r\n                a('[data-action=\"' + e + '\"]', this.$el).classList.add(\"-disabled-\")\r\n            }\r\n\r\n            _resetNavStatus() {\r\n                !function (e) {\r\n                    for (var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), s = 1; s < t; s++) i[s - 1] = arguments[s];\r\n                    e.length ? e.forEach((e => {\r\n                        e.classList.remove(...i)\r\n                    })) : e.classList.remove(...i)\r\n                }(this.$el.querySelectorAll(\".air-datepicker-nav--action\"), \"-disabled-\")\r\n            }\r\n\r\n            _buildBaseHtml() {\r\n                let {prevHtml: e, nextHtml: t} = this.opts;\r\n                this.$el.innerHTML = '<div class=\"air-datepicker-nav--action\" data-action=\"prev\">'.concat(e, \"</div>\") + '<div class=\"air-datepicker-nav--title\"></div>' + '<div class=\"air-datepicker-nav--action\" data-action=\"next\">'.concat(t, \"</div>\")\r\n            }\r\n\r\n            get isNavIsFunction() {\r\n                let {navTitles: e} = this.opts;\r\n                return Object.keys(e).find((t => \"function\" == typeof e[t]))\r\n            }\r\n        }\r\n\r\n        var V = {\r\n            today: {content: e => e.locale.today, onClick: e => e.setViewDate(new Date)},\r\n            clear: {content: e => e.locale.clear, onClick: e => e.clear()}\r\n        };\r\n\r\n        class x {\r\n            constructor(e) {\r\n                let {dp: t, opts: i} = e;\r\n                this.dp = t, this.opts = i, this.init()\r\n            }\r\n\r\n            init() {\r\n                this.createElement(), this.render()\r\n            }\r\n\r\n            createElement() {\r\n                this.$el = n({className: \"air-datepicker-buttons\"})\r\n            }\r\n\r\n            destroy() {\r\n                this.$el.parentNode.removeChild(this.$el)\r\n            }\r\n\r\n            clearHtml() {\r\n                return this.$el.innerHTML = \"\", this\r\n            }\r\n\r\n            generateButtons() {\r\n                let {buttons: e} = this.opts;\r\n                Array.isArray(e) || (e = [e]), e.forEach((e => {\r\n                    let t = e;\r\n                    \"string\" == typeof e && V[e] && (t = V[e]);\r\n                    let i = this.createButton(t);\r\n                    t.onClick && this.attachEventToButton(i, t.onClick), this.$el.appendChild(i)\r\n                }))\r\n            }\r\n\r\n            attachEventToButton(e, t) {\r\n                e.addEventListener(\"click\", (() => {\r\n                    t(this.dp)\r\n                }))\r\n            }\r\n\r\n            createButton(e) {\r\n                let {content: t, className: i, tagName: s = \"button\", attrs: a = {}} = e,\r\n                    r = \"function\" == typeof t ? t(this.dp) : t;\r\n                return n({\r\n                    tagName: s,\r\n                    innerHtml: \"<span tabindex='-1'>\".concat(r, \"</span>\"),\r\n                    className: c(\"air-datepicker-button\", i),\r\n                    attrs: a\r\n                })\r\n            }\r\n\r\n            render() {\r\n                this.generateButtons()\r\n            }\r\n        }\r\n\r\n        function H(e, t, i) {\r\n            return t in e ? Object.defineProperty(e, t, {\r\n                value: i,\r\n                enumerable: !0,\r\n                configurable: !0,\r\n                writable: !0\r\n            }) : e[t] = i, e\r\n        }\r\n\r\n        class L {\r\n            constructor() {\r\n                let {opts: e, dp: t} = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\r\n                H(this, \"toggleTimepickerIsActive\", (e => {\r\n                    this.dp.timepickerIsActive = e\r\n                })), H(this, \"onChangeSelectedDate\", (e => {\r\n                    let {date: t, updateTime: i = !1} = e;\r\n                    t && (this.setMinMaxTime(t), this.setCurrentTime(!!i && t), this.addTimeToDate(t))\r\n                })), H(this, \"onChangeLastSelectedDate\", (e => {\r\n                    e && (this.setTime(e), this.render())\r\n                })), H(this, \"onChangeInputRange\", (e => {\r\n                    let t = e.target;\r\n                    this[t.getAttribute(\"name\")] = t.value, this.updateText(), this.dp.trigger(i.eventChangeTime, {\r\n                        hours: this.hours,\r\n                        minutes: this.minutes\r\n                    })\r\n                })), H(this, \"onMouseEnterLeave\", (e => {\r\n                    let t = e.target.getAttribute(\"name\"), i = this.$minutesText;\r\n                    \"hours\" === t && (i = this.$hoursText), i.classList.toggle(\"-focus-\")\r\n                })), H(this, \"onFocus\", (() => {\r\n                    this.toggleTimepickerIsActive(!0)\r\n                })), H(this, \"onBlur\", (() => {\r\n                    this.toggleTimepickerIsActive(!1)\r\n                })), this.opts = e, this.dp = t;\r\n                let {timeFormat: s} = this.dp.locale;\r\n                s && (s.match(k(\"h\")) || s.match(k(\"hh\"))) && (this.ampm = !0), this.init()\r\n            }\r\n\r\n            init() {\r\n                this.setTime(this.dp.lastSelectedDate || this.dp.viewDate), this.createElement(), this.buildHtml(), this.defineDOM(), this.render(), this.bindDatepickerEvents(), this.bindDOMEvents()\r\n            }\r\n\r\n            bindDatepickerEvents() {\r\n                this.dp.on(i.eventChangeSelectedDate, this.onChangeSelectedDate), this.dp.on(i.eventChangeLastSelectedDate, this.onChangeLastSelectedDate)\r\n            }\r\n\r\n            bindDOMEvents() {\r\n                let e = \"input\";\r\n                navigator.userAgent.match(/trident/gi) && (e = \"change\"), v(this.$ranges, e, this.onChangeInputRange), v(this.$ranges, \"mouseenter\", this.onMouseEnterLeave), v(this.$ranges, \"mouseleave\", this.onMouseEnterLeave), v(this.$ranges, \"focus\", this.onFocus), v(this.$ranges, \"mousedown\", this.onFocus), v(this.$ranges, \"blur\", this.onBlur)\r\n            }\r\n\r\n            createElement() {\r\n                this.$el = n({className: c(\"air-datepicker-time\", {\"-am-pm-\": this.dp.ampm})})\r\n            }\r\n\r\n            destroy() {\r\n                this.dp.off(i.eventChangeSelectedDate, this.onChangeSelectedDate), this.dp.off(i.eventChangeLastSelectedDate, this.onChangeLastSelectedDate), this.$el.parentNode.removeChild(this.$el)\r\n            }\r\n\r\n            buildHtml() {\r\n                let {\r\n                    ampm: e,\r\n                    hours: t,\r\n                    displayHours: i,\r\n                    minutes: s,\r\n                    minHours: a,\r\n                    minMinutes: n,\r\n                    maxHours: r,\r\n                    maxMinutes: h,\r\n                    dayPeriod: o,\r\n                    opts: {hoursStep: d, minutesStep: c}\r\n                } = this;\r\n                this.$el.innerHTML = '<div class=\"air-datepicker-time--current\">' + '   <span class=\"air-datepicker-time--current-hours\">'.concat(l(i), \"</span>\") + '   <span class=\"air-datepicker-time--current-colon\">:</span>' + '   <span class=\"air-datepicker-time--current-minutes\">'.concat(l(s), \"</span>\") + \"   \".concat(e ? \"<span class='air-datepicker-time--current-ampm'>\".concat(o, \"</span>\") : \"\") + '</div><div class=\"air-datepicker-time--sliders\">   <div class=\"air-datepicker-time--row\">' + '      <input type=\"range\" name=\"hours\" value=\"'.concat(t, '\" min=\"').concat(a, '\" max=\"').concat(r, '\" step=\"').concat(d, '\"/>') + '   </div>   <div class=\"air-datepicker-time--row\">' + '      <input type=\"range\" name=\"minutes\" value=\"'.concat(s, '\" min=\"').concat(n, '\" max=\"').concat(h, '\" step=\"').concat(c, '\"/>') + \"   </div></div>\"\r\n            }\r\n\r\n            defineDOM() {\r\n                let e = e => a(e, this.$el);\r\n                this.$ranges = this.$el.querySelectorAll('[type=\"range\"]'), this.$hours = e('[name=\"hours\"]'), this.$minutes = e('[name=\"minutes\"]'), this.$hoursText = e(\".air-datepicker-time--current-hours\"), this.$minutesText = e(\".air-datepicker-time--current-minutes\"), this.$ampm = e(\".air-datepicker-time--current-ampm\")\r\n            }\r\n\r\n            setTime(e) {\r\n                this.setMinMaxTime(e), this.setCurrentTime(e)\r\n            }\r\n\r\n            addTimeToDate(e) {\r\n                e && (e.setHours(this.hours), e.setMinutes(this.minutes))\r\n            }\r\n\r\n            setMinMaxTime(e) {\r\n                if (this.setMinMaxTimeFromOptions(), e) {\r\n                    let {minDate: t, maxDate: i} = this.dp;\r\n                    t && u(e, t) && this.setMinTimeFromMinDate(t), i && u(e, i) && this.setMaxTimeFromMaxDate(i)\r\n                }\r\n            }\r\n\r\n            setCurrentTime(e) {\r\n                let {hours: t, minutes: i} = e ? o(e) : this;\r\n                this.hours = f(t, this.minHours, this.maxHours), this.minutes = f(i, this.minMinutes, this.maxMinutes)\r\n            }\r\n\r\n            setMinMaxTimeFromOptions() {\r\n                let {minHours: e, minMinutes: t, maxHours: i, maxMinutes: s} = this.opts;\r\n                this.minHours = f(e, 0, 23), this.minMinutes = f(t, 0, 59), this.maxHours = f(i, 0, 23), this.maxMinutes = f(s, 0, 59)\r\n            }\r\n\r\n            setMinTimeFromMinDate(e) {\r\n                let {lastSelectedDate: t} = this.dp;\r\n                this.minHours = e.getHours(), t && t.getHours() > e.getHours() ? this.minMinutes = this.opts.minMinutes : this.minMinutes = e.getMinutes()\r\n            }\r\n\r\n            setMaxTimeFromMaxDate(e) {\r\n                let {lastSelectedDate: t} = this.dp;\r\n                this.maxHours = e.getHours(), t && t.getHours() < e.getHours() ? this.maxMinutes = this.opts.maxMinutes : this.maxMinutes = e.getMinutes()\r\n            }\r\n\r\n            getDayPeriod(e, t) {\r\n                let i = e, s = Number(e);\r\n                e instanceof Date && (i = o(e), s = Number(i.hours));\r\n                let a = \"am\";\r\n                if (t || this.ampm) {\r\n                    switch (!0) {\r\n                        case 12 === s:\r\n                        case s > 11:\r\n                            a = \"pm\"\r\n                    }\r\n                    s = s % 12 == 0 ? 12 : s % 12\r\n                }\r\n                return {hours: s, dayPeriod: a}\r\n            }\r\n\r\n            updateSliders() {\r\n                r(this.$hours, {\r\n                    min: this.minHours,\r\n                    max: this.maxHours\r\n                }).value = this.hours, r(this.$minutes, {\r\n                    min: this.minMinutes,\r\n                    max: this.maxMinutes\r\n                }).value = this.minutes\r\n            }\r\n\r\n            updateText() {\r\n                this.$hoursText.innerHTML = l(this.displayHours), this.$minutesText.innerHTML = l(this.minutes), this.ampm && (this.$ampm.innerHTML = this.dayPeriod)\r\n            }\r\n\r\n            set hours(e) {\r\n                this._hours = e;\r\n                let {hours: t, dayPeriod: i} = this.getDayPeriod(e);\r\n                this.displayHours = t, this.dayPeriod = i\r\n            }\r\n\r\n            get hours() {\r\n                return this._hours\r\n            }\r\n\r\n            render() {\r\n                this.updateSliders(), this.updateText()\r\n            }\r\n        }\r\n\r\n        function O(e, t, i) {\r\n            return t in e ? Object.defineProperty(e, t, {\r\n                value: i,\r\n                enumerable: !0,\r\n                configurable: !0,\r\n                writable: !0\r\n            }) : e[t] = i, e\r\n        }\r\n\r\n        class A {\r\n            constructor(e) {\r\n                let {dp: t, opts: i} = e;\r\n                O(this, \"pressedKeys\", new Set), O(this, \"hotKeys\", new Map([[[[\"Control\", \"ArrowRight\"], [\"Control\", \"ArrowUp\"]], e => e.month++], [[[\"Control\", \"ArrowLeft\"], [\"Control\", \"ArrowDown\"]], e => e.month--], [[[\"Shift\", \"ArrowRight\"], [\"Shift\", \"ArrowUp\"]], e => e.year++], [[[\"Shift\", \"ArrowLeft\"], [\"Shift\", \"ArrowDown\"]], e => e.year--], [[[\"Alt\", \"ArrowRight\"], [\"Alt\", \"ArrowUp\"]], e => e.year += 10], [[[\"Alt\", \"ArrowLeft\"], [\"Alt\", \"ArrowDown\"]], e => e.year -= 10], [[\"Control\", \"Shift\", \"ArrowUp\"], (e, t) => t.up()]])), O(this, \"handleHotKey\", (e => {\r\n                    let t = this.hotKeys.get(e), i = o(this.getInitialFocusDate());\r\n                    t(i, this.dp);\r\n                    let {year: s, month: a, date: n} = i, r = h(new Date(s, a));\r\n                    r < n && (n = r);\r\n                    let l = this.dp.getClampedDate(new Date(s, a, n));\r\n                    this.dp.setFocusDate(l, {viewDateTransition: !0})\r\n                })), O(this, \"isHotKeyPressed\", (() => {\r\n                    let e = !1, t = this.pressedKeys.size, i = e => this.pressedKeys.has(e);\r\n                    for (let [s] of this.hotKeys) {\r\n                        if (e) break;\r\n                        if (Array.isArray(s[0])) s.forEach((a => {\r\n                            e || t !== a.length || (e = a.every(i) && s)\r\n                        })); else {\r\n                            if (t !== s.length) continue;\r\n                            e = s.every(i) && s\r\n                        }\r\n                    }\r\n                    return e\r\n                })), O(this, \"isArrow\", (e => e >= 37 && e <= 40)), O(this, \"onKeyDown\", (e => {\r\n                    let {key: t, which: i} = e, {dp: s, dp: {focusDate: a}, opts: n} = this;\r\n                    this.registerKey(t);\r\n                    let r = this.isHotKeyPressed();\r\n                    if (r) return e.preventDefault(), void this.handleHotKey(r);\r\n                    if (this.isArrow(i)) return e.preventDefault(), void this.focusNextCell(t);\r\n                    if (\"Enter\" === t) {\r\n                        if (s.currentView !== n.minView) return void s.down();\r\n                        if (a) {\r\n                            let e = s._checkIfDateIsSelected(a);\r\n                            return void (e ? s._handleAlreadySelectedDates(e, a) : s.selectDate(a))\r\n                        }\r\n                    }\r\n                    \"Escape\" === t && this.dp.hide()\r\n                })), O(this, \"onKeyUp\", (e => {\r\n                    this.removeKey(e.key)\r\n                })), this.dp = t, this.opts = i, this.init()\r\n            }\r\n\r\n            init() {\r\n                this.bindKeyboardEvents()\r\n            }\r\n\r\n            bindKeyboardEvents() {\r\n                let {$el: e} = this.dp;\r\n                e.addEventListener(\"keydown\", this.onKeyDown), e.addEventListener(\"keyup\", this.onKeyUp)\r\n            }\r\n\r\n            destroy() {\r\n                let {$el: e} = this.dp;\r\n                e.removeEventListener(\"keydown\", this.onKeyDown), e.removeEventListener(\"keyup\", this.onKeyUp), this.hotKeys = null, this.pressedKeys = null\r\n            }\r\n\r\n            getInitialFocusDate() {\r\n                let {focusDate: e, currentView: t, selectedDates: s, parsedViewDate: {year: a, month: n}} = this.dp,\r\n                    r = e || s[s.length - 1];\r\n                if (!r) switch (t) {\r\n                    case i.days:\r\n                        r = new Date(a, n, (new Date).getDate());\r\n                        break;\r\n                    case i.months:\r\n                        r = new Date(a, n, 1);\r\n                        break;\r\n                    case i.years:\r\n                        r = new Date(a, 0, 1)\r\n                }\r\n                return r\r\n            }\r\n\r\n            focusNextCell(e) {\r\n                let t = this.getInitialFocusDate(), {currentView: s} = this.dp, {days: a, months: n, years: r} = i,\r\n                    h = o(t), l = h.year, d = h.month, c = h.date;\r\n                switch (e) {\r\n                    case\"ArrowLeft\":\r\n                        s === a && (c -= 1), s === n && (d -= 1), s === r && (l -= 1);\r\n                        break;\r\n                    case\"ArrowUp\":\r\n                        s === a && (c -= 7), s === n && (d -= 3), s === r && (l -= 4);\r\n                        break;\r\n                    case\"ArrowRight\":\r\n                        s === a && (c += 1), s === n && (d += 1), s === r && (l += 1);\r\n                        break;\r\n                    case\"ArrowDown\":\r\n                        s === a && (c += 7), s === n && (d += 3), s === r && (l += 4)\r\n                }\r\n                let u = this.dp.getClampedDate(new Date(l, d, c));\r\n                this.dp.setFocusDate(u, {viewDateTransition: !0})\r\n            }\r\n\r\n            registerKey(e) {\r\n                this.pressedKeys.add(e)\r\n            }\r\n\r\n            removeKey(e) {\r\n                this.pressedKeys.delete(e)\r\n            }\r\n        }\r\n\r\n        let E = {\r\n            on(e, t) {\r\n                this.__events || (this.__events = {}), this.__events[e] ? this.__events[e].push(t) : this.__events[e] = [t]\r\n            }, off(e, t) {\r\n                this.__events && this.__events[e] && (this.__events[e] = this.__events[e].filter((e => e !== t)))\r\n            }, removeAllEvents() {\r\n                this.__events = {}\r\n            }, trigger(e) {\r\n                for (var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), s = 1; s < t; s++) i[s - 1] = arguments[s];\r\n                this.__events && this.__events[e] && this.__events[e].forEach((e => {\r\n                    e(...i)\r\n                }))\r\n            }\r\n        };\r\n\r\n        function N(e, t, i) {\r\n            return t in e ? Object.defineProperty(e, t, {\r\n                value: i,\r\n                enumerable: !0,\r\n                configurable: !0,\r\n                writable: !0\r\n            }) : e[t] = i, e\r\n        }\r\n\r\n        let I = \"\", R = \"\", P = \"\", B = !1;\r\n\r\n        class K {\r\n            constructor(e, t) {\r\n                var r = this;\r\n                if (N(this, \"viewIndexes\", [i.days, i.months, i.years]), N(this, \"next\", (() => {\r\n                    let {year: e, month: t} = this.parsedViewDate;\r\n                    switch (this.currentView) {\r\n                        case i.days:\r\n                            this.setViewDate(new Date(e, t + 1, 1));\r\n                            break;\r\n                        case i.months:\r\n                            this.setViewDate(new Date(e + 1, t, 1));\r\n                            break;\r\n                        case i.years:\r\n                            this.setViewDate(new Date(e + 10, 0, 1))\r\n                    }\r\n                })), N(this, \"prev\", (() => {\r\n                    let {year: e, month: t} = this.parsedViewDate;\r\n                    switch (this.currentView) {\r\n                        case i.days:\r\n                            this.setViewDate(new Date(e, t - 1, 1));\r\n                            break;\r\n                        case i.months:\r\n                            this.setViewDate(new Date(e - 1, t, 1));\r\n                            break;\r\n                        case i.years:\r\n                            this.setViewDate(new Date(e - 10, 0, 1))\r\n                    }\r\n                })), N(this, \"_finishHide\", (() => {\r\n                    this.hideAnimation = !1, this._destroyComponents(), this.$container.removeChild(this.$datepicker)\r\n                })), N(this, \"setPosition\", (function (e) {\r\n                    let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\r\n                    if (\"function\" == typeof (e = e || r.opts.position)) return void (r.customHide = e({\r\n                        $datepicker: r.$datepicker,\r\n                        $target: r.$el,\r\n                        $pointer: r.$pointer,\r\n                        isViewChange: t,\r\n                        done: r._finishHide\r\n                    }));\r\n                    let i, s, {isMobile: a} = r.opts, n = r.$el.getBoundingClientRect(),\r\n                        h = r.$el.getBoundingClientRect(), o = r.$datepicker.offsetParent, l = r.$el.offsetParent,\r\n                        d = r.$datepicker.getBoundingClientRect(), c = e.split(\" \"), u = window.scrollY,\r\n                        p = window.scrollX, m = r.opts.offset, g = c[0], D = c[1];\r\n                    if (a) r.$datepicker.style.cssText = \"left: 50%; top: 50%\"; else {\r\n                        if (o === l && o !== document.body && (h = {\r\n                            top: r.$el.offsetTop,\r\n                            left: r.$el.offsetLeft,\r\n                            width: n.width,\r\n                            height: r.$el.offsetHeight\r\n                        }, u = 0, p = 0), o !== l && o !== document.body) {\r\n                            let e = o.getBoundingClientRect();\r\n                            h = {\r\n                                top: n.top - e.top,\r\n                                left: n.left - e.left,\r\n                                width: n.width,\r\n                                height: n.height\r\n                            }, u = 0, p = 0\r\n                        }\r\n                        switch (g) {\r\n                            case\"top\":\r\n                                i = h.top - d.height - m;\r\n                                break;\r\n                            case\"right\":\r\n                                s = h.left + h.width + m;\r\n                                break;\r\n                            case\"bottom\":\r\n                                i = h.top + h.height + m;\r\n                                break;\r\n                            case\"left\":\r\n                                s = h.left - d.width - m\r\n                        }\r\n                        switch (D) {\r\n                            case\"top\":\r\n                                i = h.top;\r\n                                break;\r\n                            case\"right\":\r\n                                s = h.left + h.width - d.width;\r\n                                break;\r\n                            case\"bottom\":\r\n                                i = h.top + h.height - d.height;\r\n                                break;\r\n                            case\"left\":\r\n                                s = h.left;\r\n                                break;\r\n                            case\"center\":\r\n                                /left|right/.test(g) ? i = h.top + h.height / 2 - d.height / 2 : s = h.left + h.width / 2 - d.width / 2\r\n                        }\r\n                        r.$datepicker.style.cssText = \"left: \".concat(s + p, \"px; top: \").concat(i + u, \"px\")\r\n                    }\r\n                })), N(this, \"_setInputValue\", (() => {\r\n                    let {opts: e, $altField: t, locale: {dateFormat: i}} = this, {\r\n                        altFieldDateFormat: s,\r\n                        altField: a\r\n                    } = e;\r\n                    a && t && (t.value = this._getInputValue(s)), this.$el.value = this._getInputValue(i)\r\n                })), N(this, \"_getInputValue\", (e => {\r\n                    let {selectedDates: t, opts: i} = this, {multipleDates: s, multipleDatesSeparator: a} = i;\r\n                    if (!t.length) return \"\";\r\n                    let n = \"function\" == typeof e, r = n ? e(s ? t : t[0]) : t.map((t => this.formatDate(t, e)));\r\n                    return r = n ? r : r.join(a), r\r\n                })), N(this, \"_checkIfDateIsSelected\", (function (e) {\r\n                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : i.days, s = !1;\r\n                    return r.selectedDates.some((i => {\r\n                        let a = u(e, i, t);\r\n                        return s = a && i, a\r\n                    })), s\r\n                })), N(this, \"_scheduleCallAfterTransition\", (e => {\r\n                    this._cancelScheduledCall(), e && e(!1), this._onTransitionEnd = () => {\r\n                        e && e(!0)\r\n                    }, this.$datepicker.addEventListener(\"transitionend\", this._onTransitionEnd, {once: !0})\r\n                })), N(this, \"_cancelScheduledCall\", (() => {\r\n                    this.$datepicker.removeEventListener(\"transitionend\", this._onTransitionEnd)\r\n                })), N(this, \"setViewDate\", (e => {\r\n                    if (!((e = b(e)) instanceof Date)) return;\r\n                    if (u(e, this.viewDate)) return;\r\n                    let t = this.viewDate;\r\n                    this.viewDate = e;\r\n                    let {onChangeViewDate: s} = this.opts;\r\n                    if (s) {\r\n                        let {month: e, year: t} = this.parsedViewDate;\r\n                        s({month: e, year: t, decade: this.curDecade})\r\n                    }\r\n                    this.trigger(i.eventChangeViewDate, e, t)\r\n                })), N(this, \"setFocusDate\", (function (e) {\r\n                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n                    (!e || (e = b(e)) instanceof Date) && (r.focusDate = e, r.opts.range && e && r._handleRangeOnFocus(), r.trigger(i.eventChangeFocusDate, e, t))\r\n                })), N(this, \"setCurrentView\", (e => {\r\n                    if (this.viewIndexes.includes(e)) {\r\n                        if (this.currentView = e, this.elIsInput && this.visible && this.setPosition(void 0, !0), this.trigger(i.eventChangeCurrentView, e), !this.views[e]) {\r\n                            let t = this.views[e] = new S({dp: this, opts: this.opts, type: e});\r\n                            this.shouldUpdateDOM && this.$content.appendChild(t.$el)\r\n                        }\r\n                        this.opts.onChangeView && this.opts.onChangeView(e)\r\n                    }\r\n                })), N(this, \"_updateLastSelectedDate\", (e => {\r\n                    this.lastSelectedDate = e, this.trigger(i.eventChangeLastSelectedDate, e)\r\n                })), N(this, \"destroy\", (() => {\r\n                    let {showEvent: e, isMobile: t} = this.opts, i = this.$datepicker.parentNode;\r\n                    i && i.removeChild(this.$datepicker), this.$el.removeEventListener(e, this._onFocus), this.$el.removeEventListener(\"blur\", this._onBlur), window.removeEventListener(\"resize\", this._onResize), t && this._removeMobileAttributes(), this.keyboardNav && this.keyboardNav.destroy(), this.views = null, this.nav = null, this.$datepicker = null, this.opts = null, this.$customContainer = null, this.viewDate = null, this.focusDate = null, this.selectedDates = null, this.rangeDateFrom = null, this.rangeDateTo = null\r\n                })), N(this, \"update\", (e => {\r\n                    let t = w({}, this.opts);\r\n                    w(this.opts, e);\r\n                    let {timepicker: s, buttons: a, range: n, selectedDates: r, isMobile: h} = this.opts,\r\n                        o = this.visible || this.treatAsInline;\r\n                    this._createMinMaxDates(), this._limitViewDateByMaxMinDates(), this._handleLocale(), !t.selectedDates && r && this.selectDate(r), e.view && this.setCurrentView(e.view), this._setInputValue(), t.range && !n ? (this.rangeDateTo = !1, this.rangeDateFrom = !1) : !t.range && n && this.selectedDates.length && (this.rangeDateFrom = this.selectedDates[0], this.rangeDateTo = this.selectedDates[1]), t.timepicker && !s ? (o && this.timepicker.destroy(), this.timepicker = !1, this.$timepicker.parentNode.removeChild(this.$timepicker)) : !t.timepicker && s && this._addTimepicker(), !t.buttons && a ? this._addButtons() : t.buttons && !a ? (this.buttons.destroy(), this.$buttons.parentNode.removeChild(this.$buttons)) : o && t.buttons && a && this.buttons.clearHtml().render(), !t.isMobile && h ? (this.treatAsInline || P || this._createMobileOverlay(), this._addMobileAttributes(), this.visible && this._showMobileOverlay()) : t.isMobile && !h && (this._removeMobileAttributes(), this.visible && (P.classList.remove(\"-active-\"), \"function\" != typeof this.opts.position && this.setPosition())), o && (this.nav.update(), this.views[this.currentView].render(), this.currentView === i.days && this.views[this.currentView].renderDayNames())\r\n                })), N(this, \"isOtherMonth\", (e => {\r\n                    let {month: t} = o(e);\r\n                    return t !== this.parsedViewDate.month\r\n                })), N(this, \"isOtherYear\", (e => {\r\n                    let {year: t} = o(e);\r\n                    return t !== this.parsedViewDate.year\r\n                })), N(this, \"isOtherDecade\", (e => {\r\n                    let {year: t} = o(e), [i, s] = d(this.viewDate);\r\n                    return t < i || t > s\r\n                })), N(this, \"_onChangeSelectedDate\", (e => {\r\n                    let {silent: t} = e;\r\n                    setTimeout((() => {\r\n                        this._setInputValue(), this.opts.onSelect && !t && this._triggerOnSelect()\r\n                    }))\r\n                })), N(this, \"_onChangeFocusedDate\", (function (e) {\r\n                    let {viewDateTransition: t} = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n                    if (!e) return;\r\n                    let i = !1;\r\n                    t && (i = r.isOtherMonth(e) || r.isOtherYear(e) || r.isOtherDecade(e)), i && r.setViewDate(e)\r\n                })), N(this, \"_onChangeTime\", (e => {\r\n                    let {hours: t, minutes: i} = e, s = new Date, {lastSelectedDate: a, opts: {onSelect: n}} = this,\r\n                        r = a;\r\n                    a || (r = s);\r\n                    let h = this.getCell(r, this.currentViewSingular), o = h && h.adpCell;\r\n                    o && o.isDisabled || (r.setHours(t), r.setMinutes(i), a ? (this._setInputValue(), n && this._triggerOnSelect()) : this.selectDate(r))\r\n                })), N(this, \"_onFocus\", (e => {\r\n                    this.visible || this.show()\r\n                })), N(this, \"_onBlur\", (e => {\r\n                    this.inFocus || !this.visible || this.opts.isMobile || this.hide()\r\n                })), N(this, \"_onMouseDown\", (e => {\r\n                    this.inFocus = !0\r\n                })), N(this, \"_onMouseUp\", (e => {\r\n                    this.inFocus = !1, this.$el.focus()\r\n                })), N(this, \"_onResize\", (() => {\r\n                    this.visible && \"function\" != typeof this.opts.position && this.setPosition()\r\n                })), N(this, \"_onClickOverlay\", (() => {\r\n                    this.visible && this.hide()\r\n                })), N(this, \"isWeekend\", (e => this.opts.weekends.includes(e))), N(this, \"getClampedDate\", (e => {\r\n                    let {minDate: t, maxDate: i} = this, s = e;\r\n                    return i && p(e, i) ? s = i : t && m(e, t) && (s = t), s\r\n                })), this.$el = a(e), !this.$el) return;\r\n                this.$datepicker = n({className: \"air-datepicker\"}), this.opts = w({}, s, t), this.$customContainer = !!this.opts.container && a(this.opts.container), this.$altField = a(this.opts.altField || !1), I || (I = a(\"body\"));\r\n                let {view: h, startDate: l} = this.opts;\r\n                l || (this.opts.startDate = new Date), \"INPUT\" === this.$el.nodeName && (this.elIsInput = !0), this.inited = !1, this.visible = !1, this.viewDate = b(this.opts.startDate), this.focusDate = !1, this.initialReadonly = this.$el.getAttribute(\"readonly\"), this.customHide = !1, this.currentView = h, this.selectedDates = [], this.views = {}, this.keys = [], this.rangeDateFrom = \"\", this.rangeDateTo = \"\", this.timepickerIsActive = !1, this.treatAsInline = this.opts.inline || !this.elIsInput, this.init()\r\n            }\r\n\r\n            init() {\r\n                let {\r\n                    opts: e,\r\n                    treatAsInline: t,\r\n                    opts: {inline: i, isMobile: s, selectedDates: a, keyboardNav: r, onlyTimepicker: h}\r\n                } = this;\r\n                var o;\r\n                B || i || !this.elIsInput || (B = !0, R = n({\r\n                    className: o = K.defaultContainerId,\r\n                    id: o\r\n                }), I.appendChild(R)), !s || P || t || this._createMobileOverlay(), this._handleLocale(), this._bindSubEvents(), this._createMinMaxDates(), this._limitViewDateByMaxMinDates(), this.elIsInput && (i || this._bindEvents(), r && !h && (this.keyboardNav = new A({\r\n                    dp: this,\r\n                    opts: e\r\n                }))), a && this.selectDate(a, {silent: !0}), this.opts.visible && !t && this.show(), s && !t && this.$el.setAttribute(\"readonly\", !0), t && this._createComponents()\r\n            }\r\n\r\n            _createMobileOverlay() {\r\n                P = n({className: \"air-datepicker-overlay\"}), R.appendChild(P)\r\n            }\r\n\r\n            _createComponents() {\r\n                let {\r\n                    opts: e,\r\n                    treatAsInline: t,\r\n                    opts: {\r\n                        inline: i,\r\n                        buttons: s,\r\n                        timepicker: a,\r\n                        position: n,\r\n                        classes: r,\r\n                        onlyTimepicker: h,\r\n                        isMobile: o\r\n                    }\r\n                } = this;\r\n                this._buildBaseHtml(), this.elIsInput && (i || this._setPositionClasses(n)), !i && this.elIsInput || this.$datepicker.classList.add(\"-inline-\"), r && this.$datepicker.classList.add(...r.split(\" \")), h && this.$datepicker.classList.add(\"-only-timepicker-\"), o && !t && this._addMobileAttributes(), this.views[this.currentView] = new S({\r\n                    dp: this,\r\n                    type: this.currentView,\r\n                    opts: e\r\n                }), this.nav = new F({\r\n                    dp: this,\r\n                    opts: e\r\n                }), a && this._addTimepicker(), s && this._addButtons(), this.$content.appendChild(this.views[this.currentView].$el), this.$nav.appendChild(this.nav.$el)\r\n            }\r\n\r\n            _destroyComponents() {\r\n                for (let e in this.views) this.views[e].destroy();\r\n                this.views = {}, this.nav.destroy(), this.timepicker && this.timepicker.destroy()\r\n            }\r\n\r\n            _addMobileAttributes() {\r\n                P.addEventListener(\"click\", this._onClickOverlay), this.$datepicker.classList.add(\"-is-mobile-\"), this.$el.setAttribute(\"readonly\", !0)\r\n            }\r\n\r\n            _removeMobileAttributes() {\r\n                P.removeEventListener(\"click\", this._onClickOverlay), this.$datepicker.classList.remove(\"-is-mobile-\"), this.initialReadonly || \"\" === this.initialReadonly || this.$el.removeAttribute(\"readonly\")\r\n            }\r\n\r\n            _createMinMaxDates() {\r\n                let {minDate: e, maxDate: t} = this.opts;\r\n                this.minDate = !!e && b(e), this.maxDate = !!t && b(t)\r\n            }\r\n\r\n            _addTimepicker() {\r\n                this.$timepicker = n({className: \"air-datepicker--time\"}), this.$datepicker.appendChild(this.$timepicker), this.timepicker = new L({\r\n                    dp: this,\r\n                    opts: this.opts\r\n                }), this.$timepicker.appendChild(this.timepicker.$el)\r\n            }\r\n\r\n            _addButtons() {\r\n                this.$buttons = n({className: \"air-datepicker--buttons\"}), this.$datepicker.appendChild(this.$buttons), this.buttons = new x({\r\n                    dp: this,\r\n                    opts: this.opts\r\n                }), this.$buttons.appendChild(this.buttons.$el)\r\n            }\r\n\r\n            _bindSubEvents() {\r\n                this.on(i.eventChangeSelectedDate, this._onChangeSelectedDate), this.on(i.eventChangeFocusDate, this._onChangeFocusedDate), this.on(i.eventChangeTime, this._onChangeTime)\r\n            }\r\n\r\n            _buildBaseHtml() {\r\n                let {inline: e} = this.opts;\r\n                var t, i;\r\n                this.elIsInput ? e ? (t = this.$datepicker, (i = this.$el).parentNode.insertBefore(t, i.nextSibling)) : this.$container.appendChild(this.$datepicker) : this.$el.appendChild(this.$datepicker), this.$datepicker.innerHTML = '<i class=\"air-datepicker--pointer\"></i><div class=\"air-datepicker--navigation\"></div><div class=\"air-datepicker--content\"></div>', this.$content = a(\".air-datepicker--content\", this.$datepicker), this.$pointer = a(\".air-datepicker--pointer\", this.$datepicker), this.$nav = a(\".air-datepicker--navigation\", this.$datepicker)\r\n            }\r\n\r\n            _handleLocale() {\r\n                let {\r\n                    locale: e,\r\n                    dateFormat: t,\r\n                    firstDay: i,\r\n                    timepicker: s,\r\n                    onlyTimepicker: a,\r\n                    timeFormat: n,\r\n                    dateTimeSeparator: r\r\n                } = this.opts;\r\n                var h;\r\n                this.locale = (h = e, JSON.parse(JSON.stringify(h))), t && (this.locale.dateFormat = t), void 0 !== n && \"\" !== n && (this.locale.timeFormat = n);\r\n                let {timeFormat: o} = this.locale;\r\n                if (\"\" !== i && (this.locale.firstDay = i), s && \"function\" != typeof t) {\r\n                    let e = o ? r : \"\";\r\n                    this.locale.dateFormat = [this.locale.dateFormat, o || \"\"].join(e)\r\n                }\r\n                a && (this.locale.dateFormat = this.locale.timeFormat)\r\n            }\r\n\r\n            _setPositionClasses(e) {\r\n                if (\"function\" == typeof e) return void this.$datepicker.classList.add(\"-custom-position-\");\r\n                let t = (e = e.split(\" \"))[0], i = e[1],\r\n                    s = \"air-datepicker -\".concat(t, \"-\").concat(i, \"- -from-\").concat(t, \"-\");\r\n                this.$datepicker.classList.add(...s.split(\" \"))\r\n            }\r\n\r\n            _bindEvents() {\r\n                this.$el.addEventListener(this.opts.showEvent, this._onFocus), this.$el.addEventListener(\"blur\", this._onBlur), this.$datepicker.addEventListener(\"mousedown\", this._onMouseDown), this.$datepicker.addEventListener(\"mouseup\", this._onMouseUp), window.addEventListener(\"resize\", this._onResize)\r\n            }\r\n\r\n            _limitViewDateByMaxMinDates() {\r\n                let {viewDate: e, minDate: t, maxDate: i} = this;\r\n                i && p(e, i) && this.setViewDate(i), t && m(e, t) && this.setViewDate(t)\r\n            }\r\n\r\n            formatDate() {\r\n                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.viewDate,\r\n                    t = arguments.length > 1 ? arguments[1] : void 0;\r\n                if (e = b(e), !(e instanceof Date)) return;\r\n                let i = t, s = this.locale, a = o(e), n = d(e), r = K.replacer, h = \"am\";\r\n                this.opts.timepicker && this.timepicker && (h = this.timepicker.getDayPeriod(e).dayPeriod);\r\n                let l = {\r\n                    T: e.getTime(),\r\n                    m: a.minutes,\r\n                    mm: a.fullMinutes,\r\n                    h: a.hours12,\r\n                    hh: a.fullHours12,\r\n                    H: a.hours,\r\n                    HH: a.fullHours,\r\n                    aa: h,\r\n                    AA: h.toUpperCase(),\r\n                    E: s.daysShort[a.day],\r\n                    EEEE: s.days[a.day],\r\n                    d: a.date,\r\n                    dd: a.fullDate,\r\n                    M: a.month + 1,\r\n                    MM: a.fullMonth,\r\n                    MMM: s.monthsShort[a.month],\r\n                    MMMM: s.months[a.month],\r\n                    yy: a.year.toString().slice(-2),\r\n                    yyyy: a.year,\r\n                    yyyy1: n[0],\r\n                    yyyy2: n[1]\r\n                };\r\n                for (let [e, t] of Object.entries(l)) i = r(i, k(e), t);\r\n                return i\r\n            }\r\n\r\n            down(e) {\r\n                this._handleUpDownActions(e, \"down\")\r\n            }\r\n\r\n            up(e) {\r\n                this._handleUpDownActions(e, \"up\")\r\n            }\r\n\r\n            selectDate(e) {\r\n                let t, s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, {\r\n                    currentView: a,\r\n                    parsedViewDate: n,\r\n                    selectedDates: r\r\n                } = this, {updateTime: h} = s, {\r\n                    moveToOtherMonthsOnSelect: o,\r\n                    moveToOtherYearsOnSelect: l,\r\n                    multipleDates: d,\r\n                    range: c,\r\n                    autoClose: u\r\n                } = this.opts, m = r.length;\r\n                if (Array.isArray(e)) return e.forEach((e => {\r\n                    this.selectDate(e, s)\r\n                })), new Promise((e => {\r\n                    setTimeout(e)\r\n                }));\r\n                if ((e = b(e)) instanceof Date) {\r\n                    if (a === i.days && e.getMonth() !== n.month && o && (t = new Date(e.getFullYear(), e.getMonth(), 1)), a === i.years && e.getFullYear() !== n.year && l && (t = new Date(e.getFullYear(), 0, 1)), t && this.setViewDate(t), d && !c) {\r\n                        if (m === d) return;\r\n                        this._checkIfDateIsSelected(e) || r.push(e)\r\n                    } else if (c) switch (m) {\r\n                        case 1:\r\n                            r.push(e), this.rangeDateTo || (this.rangeDateTo = e), p(this.rangeDateFrom, this.rangeDateTo) && (this.rangeDateTo = this.rangeDateFrom, this.rangeDateFrom = e), this.selectedDates = [this.rangeDateFrom, this.rangeDateTo];\r\n                            break;\r\n                        case 2:\r\n                            this.selectedDates = [e], this.rangeDateFrom = e, this.rangeDateTo = \"\";\r\n                            break;\r\n                        default:\r\n                            this.selectedDates = [e], this.rangeDateFrom = e\r\n                    } else this.selectedDates = [e];\r\n                    return this.trigger(i.eventChangeSelectedDate, {\r\n                        action: i.actionSelectDate,\r\n                        silent: null == s ? void 0 : s.silent,\r\n                        date: e,\r\n                        updateTime: h\r\n                    }), this._updateLastSelectedDate(e), u && !this.timepickerIsActive && this.visible && (d || c ? c && 1 === m && this.hide() : this.hide()), new Promise((e => {\r\n                        setTimeout(e)\r\n                    }))\r\n                }\r\n            }\r\n\r\n            unselectDate(e) {\r\n                let t = this.selectedDates, s = this;\r\n                if ((e = b(e)) instanceof Date) return t.some(((a, n) => {\r\n                    if (u(a, e)) return t.splice(n, 1), s.selectedDates.length ? s._updateLastSelectedDate(s.selectedDates[s.selectedDates.length - 1]) : (s.rangeDateFrom = \"\", s.rangeDateTo = \"\", s._updateLastSelectedDate(!1)), this.trigger(i.eventChangeSelectedDate, {\r\n                        action: i.actionUnselectDate,\r\n                        date: e\r\n                    }), !0\r\n                }))\r\n            }\r\n\r\n            replaceDate(e, t) {\r\n                let s = this.selectedDates.find((t => u(t, e, this.currentView))), a = this.selectedDates.indexOf(s);\r\n                a < 0 || u(this.selectedDates[a], t, this.currentView) || (this.selectedDates[a] = t, this.trigger(i.eventChangeSelectedDate, {\r\n                    action: i.actionSelectDate,\r\n                    date: t,\r\n                    updateTime: !0\r\n                }), this._updateLastSelectedDate(t))\r\n            }\r\n\r\n            clear() {\r\n                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\r\n                return this.selectedDates = [], this.rangeDateFrom = !1, this.rangeDateTo = !1, this.trigger(i.eventChangeSelectedDate, {\r\n                    action: i.actionUnselectDate,\r\n                    silent: e.silent\r\n                }), new Promise((e => {\r\n                    setTimeout(e)\r\n                }))\r\n            }\r\n\r\n            show() {\r\n                let {onShow: e, isMobile: t} = this.opts;\r\n                this._cancelScheduledCall(), this.visible || this.hideAnimation || this._createComponents(), this.setPosition(this.opts.position), this.$datepicker.classList.add(\"-active-\"), this.visible = !0, e && this._scheduleCallAfterTransition(e), t && this._showMobileOverlay()\r\n            }\r\n\r\n            hide() {\r\n                let {onHide: e, isMobile: t} = this.opts, i = this._hasTransition();\r\n                this.visible = !1, this.hideAnimation = !0, this.$datepicker.classList.remove(\"-active-\"), this.customHide && this.customHide(), this.elIsInput && this.$el.blur(), this._scheduleCallAfterTransition((t => {\r\n                    !this.customHide && (t && i || !t && !i) && this._finishHide(), e && e(t)\r\n                })), t && P.classList.remove(\"-active-\")\r\n            }\r\n\r\n            _triggerOnSelect() {\r\n                let e = [], t = [], {\r\n                    selectedDates: i,\r\n                    locale: s,\r\n                    opts: {onSelect: a, multipleDates: n, range: r}\r\n                } = this, h = n || r, o = \"function\" == typeof s.dateFormat;\r\n                i.length && (e = i.map(g), t = o ? n ? s.dateFormat(e) : e.map((e => s.dateFormat(e))) : e.map((e => this.formatDate(e, s.dateFormat)))), a({\r\n                    date: h ? e : e[0],\r\n                    formattedDate: h ? t : t[0],\r\n                    datepicker: this\r\n                })\r\n            }\r\n\r\n            _handleAlreadySelectedDates(e, t) {\r\n                let {range: i, toggleSelected: s} = this.opts;\r\n                i ? s ? this.unselectDate(t) : 2 !== this.selectedDates.length && this.selectDate(t) : s && this.unselectDate(t), s || this._updateLastSelectedDate(e)\r\n            }\r\n\r\n            _handleUpDownActions(e, t) {\r\n                if (!((e = b(e || this.focusDate || this.viewDate)) instanceof Date)) return;\r\n                let i = \"up\" === t ? this.viewIndex + 1 : this.viewIndex - 1;\r\n                i > 2 && (i = 2), i < 0 && (i = 0), this.setViewDate(new Date(e.getFullYear(), e.getMonth(), 1)), this.setCurrentView(this.viewIndexes[i])\r\n            }\r\n\r\n            _handleRangeOnFocus() {\r\n                1 === this.selectedDates.length && (p(this.selectedDates[0], this.focusDate) ? (this.rangeDateTo = this.selectedDates[0], this.rangeDateFrom = this.focusDate) : (this.rangeDateTo = this.focusDate, this.rangeDateFrom = this.selectedDates[0]))\r\n            }\r\n\r\n            getCell(e) {\r\n                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : i.day;\r\n                if (!((e = b(e)) instanceof Date)) return;\r\n                let {year: s, month: a, date: n} = o(e), r = '[data-year=\"'.concat(s, '\"]'),\r\n                    h = '[data-month=\"'.concat(a, '\"]'), l = '[data-date=\"'.concat(n, '\"]'), d = {\r\n                        [i.day]: \"\".concat(r).concat(h).concat(l),\r\n                        [i.month]: \"\".concat(r).concat(h),\r\n                        [i.year]: \"\".concat(r)\r\n                    };\r\n                return this.views[this.currentView].$el.querySelector(d[t])\r\n            }\r\n\r\n            _showMobileOverlay() {\r\n                P.classList.add(\"-active-\")\r\n            }\r\n\r\n            _hasTransition() {\r\n                return window.getComputedStyle(this.$datepicker).getPropertyValue(\"transition-duration\").split(\", \").reduce(((e, t) => parseFloat(t) + e), 0) > 0\r\n            }\r\n\r\n            get shouldUpdateDOM() {\r\n                return this.visible || this.treatAsInline\r\n            }\r\n\r\n            get parsedViewDate() {\r\n                return o(this.viewDate)\r\n            }\r\n\r\n            get currentViewSingular() {\r\n                return this.currentView.slice(0, -1)\r\n            }\r\n\r\n            get curDecade() {\r\n                return d(this.viewDate)\r\n            }\r\n\r\n            get viewIndex() {\r\n                return this.viewIndexes.indexOf(this.currentView)\r\n            }\r\n\r\n            get isFinalView() {\r\n                return this.currentView === i.years\r\n            }\r\n\r\n            get hasSelectedDates() {\r\n                return this.selectedDates.length > 0\r\n            }\r\n\r\n            get isMinViewReached() {\r\n                return this.currentView === this.opts.minView || this.currentView === i.days\r\n            }\r\n\r\n            get $container() {\r\n                return this.$customContainer || R\r\n            }\r\n\r\n            static replacer(e, t, i) {\r\n                return e.replace(t, (function (e, t, s, a) {\r\n                    return t + i + a\r\n                }))\r\n            }\r\n        }\r\n\r\n        var j;\r\n        return N(K, \"defaults\", s), N(K, \"version\", \"3.2.0\"), N(K, \"defaultContainerId\", \"air-datepicker-global-container\"), j = K.prototype, Object.assign(j, E), t.default\r\n    }()\r\n}));","import AirDatepicker from './air-datepicker';\nexport default AirDatepicker","// Ion.RangeSlider\n// version 2.3.1 Build: 382\n// © Denis Ineshin, 2019\n// https://github.com/IonDen\n//\n// Project page:    http://ionden.com/a/plugins/ion.rangeSlider/en.html\n// GitHub page:     https://github.com/IonDen/ion.rangeSlider\n//\n// Released under MIT licence:\n// http://ionden.com/a/plugins/licence-en.html\n// =====================================================================================================================\n\n;(function(factory) {\n    if ((typeof jQuery === 'undefined' || !jQuery) && typeof define === \"function\" && define.amd) {\n        define([\"jquery\"], function (jQuery) {\n            return factory(jQuery, document, window, navigator);\n        });\n    } else if ((typeof jQuery === 'undefined' || !jQuery) && typeof exports === \"object\") {\n        factory(require(\"jquery\"), document, window, navigator);\n    } else {\n        factory(jQuery, document, window, navigator);\n    }\n} (function ($, document, window, navigator, undefined) {\n    \"use strict\";\n\n    // =================================================================================================================\n    // Service\n\n    var plugin_count = 0;\n\n    // IE8 fix\n    var is_old_ie = (function () {\n        var n = navigator.userAgent,\n            r = /msie\\s\\d+/i,\n            v;\n        if (n.search(r) > 0) {\n            v = r.exec(n).toString();\n            v = v.split(\" \")[1];\n            if (v < 9) {\n                $(\"html\").addClass(\"lt-ie9\");\n                return true;\n            }\n        }\n        return false;\n    } ());\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function bind(that) {\n\n            var target = this;\n            var slice = [].slice;\n\n            if (typeof target != \"function\") {\n                throw new TypeError();\n            }\n\n            var args = slice.call(arguments, 1),\n                bound = function () {\n\n                    if (this instanceof bound) {\n\n                        var F = function(){};\n                        F.prototype = target.prototype;\n                        var self = new F();\n\n                        var result = target.apply(\n                            self,\n                            args.concat(slice.call(arguments))\n                        );\n                        if (Object(result) === result) {\n                            return result;\n                        }\n                        return self;\n\n                    } else {\n\n                        return target.apply(\n                            that,\n                            args.concat(slice.call(arguments))\n                        );\n\n                    }\n\n                };\n\n            return bound;\n        };\n    }\n    if (!Array.prototype.indexOf) {\n        Array.prototype.indexOf = function(searchElement, fromIndex) {\n            var k;\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n            var O = Object(this);\n            var len = O.length >>> 0;\n            if (len === 0) {\n                return -1;\n            }\n            var n = +fromIndex || 0;\n            if (Math.abs(n) === Infinity) {\n                n = 0;\n            }\n            if (n >= len) {\n                return -1;\n            }\n            k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n            while (k < len) {\n                if (k in O && O[k] === searchElement) {\n                    return k;\n                }\n                k++;\n            }\n            return -1;\n        };\n    }\n\n\n\n    // =================================================================================================================\n    // Template\n\n    var base_html =\n        '<span class=\"irs\">' +\n        '<span class=\"irs-line\" tabindex=\"0\"></span>' +\n        '<span class=\"irs-min\">0</span><span class=\"irs-max\">1</span>' +\n        '<span class=\"irs-from\">0</span><span class=\"irs-to\">0</span><span class=\"irs-single\">0</span>' +\n        '</span>' +\n        '<span class=\"irs-grid\"></span>';\n\n    var single_html =\n        '<span class=\"irs-bar irs-bar--single\"></span>' +\n        '<span class=\"irs-shadow shadow-single\"></span>' +\n        '<span class=\"irs-handle single\"><i></i><i></i><i></i></span>';\n\n    var double_html =\n        '<span class=\"irs-bar\"></span>' +\n        '<span class=\"irs-shadow shadow-from\"></span>' +\n        '<span class=\"irs-shadow shadow-to\"></span>' +\n        '<span class=\"irs-handle from\"><i></i><i></i><i></i></span>' +\n        '<span class=\"irs-handle to\"><i></i><i></i><i></i></span>';\n\n    var disable_html =\n        '<span class=\"irs-disable-mask\"></span>';\n\n\n\n    // =================================================================================================================\n    // Core\n\n    /**\n     * Main plugin constructor\n     *\n     * @param input {Object} link to base input element\n     * @param options {Object} slider config\n     * @param plugin_count {Number}\n     * @constructor\n     */\n    var IonRangeSlider = function (input, options, plugin_count) {\n        this.VERSION = \"2.3.1\";\n        this.input = input;\n        this.plugin_count = plugin_count;\n        this.current_plugin = 0;\n        this.calc_count = 0;\n        this.update_tm = 0;\n        this.old_from = 0;\n        this.old_to = 0;\n        this.old_min_interval = null;\n        this.raf_id = null;\n        this.dragging = false;\n        this.force_redraw = false;\n        this.no_diapason = false;\n        this.has_tab_index = true;\n        this.is_key = false;\n        this.is_update = false;\n        this.is_start = true;\n        this.is_finish = false;\n        this.is_active = false;\n        this.is_resize = false;\n        this.is_click = false;\n\n        options = options || {};\n\n        // cache for links to all DOM elements\n        this.$cache = {\n            win: $(window),\n            body: $(document.body),\n            input: $(input),\n            cont: null,\n            rs: null,\n            min: null,\n            max: null,\n            from: null,\n            to: null,\n            single: null,\n            bar: null,\n            line: null,\n            s_single: null,\n            s_from: null,\n            s_to: null,\n            shad_single: null,\n            shad_from: null,\n            shad_to: null,\n            edge: null,\n            grid: null,\n            grid_labels: []\n        };\n\n        // storage for measure variables\n        this.coords = {\n            // left\n            x_gap: 0,\n            x_pointer: 0,\n\n            // width\n            w_rs: 0,\n            w_rs_old: 0,\n            w_handle: 0,\n\n            // percents\n            p_gap: 0,\n            p_gap_left: 0,\n            p_gap_right: 0,\n            p_step: 0,\n            p_pointer: 0,\n            p_handle: 0,\n            p_single_fake: 0,\n            p_single_real: 0,\n            p_from_fake: 0,\n            p_from_real: 0,\n            p_to_fake: 0,\n            p_to_real: 0,\n            p_bar_x: 0,\n            p_bar_w: 0,\n\n            // grid\n            grid_gap: 0,\n            big_num: 0,\n            big: [],\n            big_w: [],\n            big_p: [],\n            big_x: []\n        };\n\n        // storage for labels measure variables\n        this.labels = {\n            // width\n            w_min: 0,\n            w_max: 0,\n            w_from: 0,\n            w_to: 0,\n            w_single: 0,\n\n            // percents\n            p_min: 0,\n            p_max: 0,\n            p_from_fake: 0,\n            p_from_left: 0,\n            p_to_fake: 0,\n            p_to_left: 0,\n            p_single_fake: 0,\n            p_single_left: 0\n        };\n\n\n\n        /**\n         * get and validate config\n         */\n        var $inp = this.$cache.input,\n            val = $inp.prop(\"value\"),\n            config, config_from_data, prop;\n\n        // default config\n        config = {\n            skin: \"flat\",\n            type: \"single\",\n\n            min: 10,\n            max: 100,\n            from: null,\n            to: null,\n            step: 1,\n\n            min_interval: 0,\n            max_interval: 0,\n            drag_interval: false,\n\n            values: [],\n            p_values: [],\n\n            from_fixed: false,\n            from_min: null,\n            from_max: null,\n            from_shadow: false,\n\n            to_fixed: false,\n            to_min: null,\n            to_max: null,\n            to_shadow: false,\n\n            prettify_enabled: true,\n            prettify_separator: \" \",\n            prettify: null,\n\n            force_edges: false,\n\n            keyboard: true,\n\n            grid: false,\n            grid_margin: true,\n            grid_num: 4,\n            grid_snap: false,\n\n            hide_min_max: false,\n            hide_from_to: false,\n\n            prefix: \"\",\n            postfix: \"\",\n            max_postfix: \"\",\n            decorate_both: true,\n            values_separator: \" — \",\n\n            input_values_separator: \";\",\n\n            disable: false,\n            block: false,\n\n            extra_classes: \"\",\n\n            scope: null,\n            onStart: null,\n            onChange: null,\n            onFinish: null,\n            onUpdate: null\n        };\n\n\n        // check if base element is input\n        if ($inp[0].nodeName !== \"INPUT\") {\n            console && console.warn && console.warn(\"Base element should be <input>!\", $inp[0]);\n        }\n\n\n        // config from data-attributes extends js config\n        config_from_data = {\n            skin: $inp.data(\"skin\"),\n            type: $inp.data(\"type\"),\n\n            min: $inp.data(\"min\"),\n            max: $inp.data(\"max\"),\n            from: $inp.data(\"from\"),\n            to: $inp.data(\"to\"),\n            step: $inp.data(\"step\"),\n\n            min_interval: $inp.data(\"minInterval\"),\n            max_interval: $inp.data(\"maxInterval\"),\n            drag_interval: $inp.data(\"dragInterval\"),\n\n            values: $inp.data(\"values\"),\n\n            from_fixed: $inp.data(\"fromFixed\"),\n            from_min: $inp.data(\"fromMin\"),\n            from_max: $inp.data(\"fromMax\"),\n            from_shadow: $inp.data(\"fromShadow\"),\n\n            to_fixed: $inp.data(\"toFixed\"),\n            to_min: $inp.data(\"toMin\"),\n            to_max: $inp.data(\"toMax\"),\n            to_shadow: $inp.data(\"toShadow\"),\n\n            prettify_enabled: $inp.data(\"prettifyEnabled\"),\n            prettify_separator: $inp.data(\"prettifySeparator\"),\n\n            force_edges: $inp.data(\"forceEdges\"),\n\n            keyboard: $inp.data(\"keyboard\"),\n\n            grid: $inp.data(\"grid\"),\n            grid_margin: $inp.data(\"gridMargin\"),\n            grid_num: $inp.data(\"gridNum\"),\n            grid_snap: $inp.data(\"gridSnap\"),\n\n            hide_min_max: $inp.data(\"hideMinMax\"),\n            hide_from_to: $inp.data(\"hideFromTo\"),\n\n            prefix: $inp.data(\"prefix\"),\n            postfix: $inp.data(\"postfix\"),\n            max_postfix: $inp.data(\"maxPostfix\"),\n            decorate_both: $inp.data(\"decorateBoth\"),\n            values_separator: $inp.data(\"valuesSeparator\"),\n\n            input_values_separator: $inp.data(\"inputValuesSeparator\"),\n\n            disable: $inp.data(\"disable\"),\n            block: $inp.data(\"block\"),\n\n            extra_classes: $inp.data(\"extraClasses\"),\n        };\n        config_from_data.values = config_from_data.values && config_from_data.values.split(\",\");\n\n        for (prop in config_from_data) {\n            if (config_from_data.hasOwnProperty(prop)) {\n                if (config_from_data[prop] === undefined || config_from_data[prop] === \"\") {\n                    delete config_from_data[prop];\n                }\n            }\n        }\n\n\n        // input value extends default config\n        if (val !== undefined && val !== \"\") {\n            val = val.split(config_from_data.input_values_separator || options.input_values_separator || \";\");\n\n            if (val[0] && val[0] == +val[0]) {\n                val[0] = +val[0];\n            }\n            if (val[1] && val[1] == +val[1]) {\n                val[1] = +val[1];\n            }\n\n            if (options && options.values && options.values.length) {\n                config.from = val[0] && options.values.indexOf(val[0]);\n                config.to = val[1] && options.values.indexOf(val[1]);\n            } else {\n                config.from = val[0] && +val[0];\n                config.to = val[1] && +val[1];\n            }\n        }\n\n\n\n        // js config extends default config\n        $.extend(config, options);\n\n\n        // data config extends config\n        $.extend(config, config_from_data);\n        this.options = config;\n\n\n\n        // validate config, to be sure that all data types are correct\n        this.update_check = {};\n        this.validate();\n\n\n\n        // default result object, returned to callbacks\n        this.result = {\n            input: this.$cache.input,\n            slider: null,\n\n            min: this.options.min,\n            max: this.options.max,\n\n            from: this.options.from,\n            from_percent: 0,\n            from_value: null,\n\n            to: this.options.to,\n            to_percent: 0,\n            to_value: null\n        };\n\n\n\n        this.init();\n    };\n\n    IonRangeSlider.prototype = {\n\n        /**\n         * Starts or updates the plugin instance\n         *\n         * @param [is_update] {boolean}\n         */\n        init: function (is_update) {\n            this.no_diapason = false;\n            this.coords.p_step = this.convertToPercent(this.options.step, true);\n\n            this.target = \"base\";\n\n            this.toggleInput();\n            this.append();\n            this.setMinMax();\n\n            if (is_update) {\n                this.force_redraw = true;\n                this.calc(true);\n\n                // callbacks called\n                this.callOnUpdate();\n            } else {\n                this.force_redraw = true;\n                this.calc(true);\n\n                // callbacks called\n                this.callOnStart();\n            }\n\n            this.updateScene();\n        },\n\n        /**\n         * Appends slider template to a DOM\n         */\n        append: function () {\n            var container_html = '<span class=\"irs irs--' + this.options.skin + ' js-irs-' + this.plugin_count + ' ' + this.options.extra_classes + '\"></span>';\n            this.$cache.input.before(container_html);\n            this.$cache.input.prop(\"readonly\", true);\n            this.$cache.cont = this.$cache.input.prev();\n            this.result.slider = this.$cache.cont;\n\n            this.$cache.cont.html(base_html);\n            this.$cache.rs = this.$cache.cont.find(\".irs\");\n            this.$cache.min = this.$cache.cont.find(\".irs-min\");\n            this.$cache.max = this.$cache.cont.find(\".irs-max\");\n            this.$cache.from = this.$cache.cont.find(\".irs-from\");\n            this.$cache.to = this.$cache.cont.find(\".irs-to\");\n            this.$cache.single = this.$cache.cont.find(\".irs-single\");\n            this.$cache.line = this.$cache.cont.find(\".irs-line\");\n            this.$cache.grid = this.$cache.cont.find(\".irs-grid\");\n\n            if (this.options.type === \"single\") {\n                this.$cache.cont.append(single_html);\n                this.$cache.bar = this.$cache.cont.find(\".irs-bar\");\n                this.$cache.edge = this.$cache.cont.find(\".irs-bar-edge\");\n                this.$cache.s_single = this.$cache.cont.find(\".single\");\n                this.$cache.from[0].style.visibility = \"hidden\";\n                this.$cache.to[0].style.visibility = \"hidden\";\n                this.$cache.shad_single = this.$cache.cont.find(\".shadow-single\");\n            } else {\n                this.$cache.cont.append(double_html);\n                this.$cache.bar = this.$cache.cont.find(\".irs-bar\");\n                this.$cache.s_from = this.$cache.cont.find(\".from\");\n                this.$cache.s_to = this.$cache.cont.find(\".to\");\n                this.$cache.shad_from = this.$cache.cont.find(\".shadow-from\");\n                this.$cache.shad_to = this.$cache.cont.find(\".shadow-to\");\n\n                this.setTopHandler();\n            }\n\n            if (this.options.hide_from_to) {\n                this.$cache.from[0].style.display = \"none\";\n                this.$cache.to[0].style.display = \"none\";\n                this.$cache.single[0].style.display = \"none\";\n            }\n\n            this.appendGrid();\n\n            if (this.options.disable) {\n                this.appendDisableMask();\n                this.$cache.input[0].disabled = true;\n            } else {\n                this.$cache.input[0].disabled = false;\n                this.removeDisableMask();\n                this.bindEvents();\n            }\n\n            // block only if not disabled\n            if (!this.options.disable) {\n                if (this.options.block) {\n                    this.appendDisableMask();\n                } else {\n                    this.removeDisableMask();\n                }\n            }\n\n            if (this.options.drag_interval) {\n                this.$cache.bar[0].style.cursor = \"ew-resize\";\n            }\n        },\n\n        /**\n         * Determine which handler has a priority\n         * works only for double slider type\n         */\n        setTopHandler: function () {\n            var min = this.options.min,\n                max = this.options.max,\n                from = this.options.from,\n                to = this.options.to;\n\n            if (from > min && to === max) {\n                this.$cache.s_from.addClass(\"type_last\");\n            } else if (to < max) {\n                this.$cache.s_to.addClass(\"type_last\");\n            }\n        },\n\n        /**\n         * Determine which handles was clicked last\n         * and which handler should have hover effect\n         *\n         * @param target {String}\n         */\n        changeLevel: function (target) {\n            switch (target) {\n                case \"single\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_single_fake);\n                    this.$cache.s_single.addClass(\"state_hover\");\n                    break;\n                case \"from\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake);\n                    this.$cache.s_from.addClass(\"state_hover\");\n                    this.$cache.s_from.addClass(\"type_last\");\n                    this.$cache.s_to.removeClass(\"type_last\");\n                    break;\n                case \"to\":\n                    this.coords.p_gap = this.toFixed(this.coords.p_pointer - this.coords.p_to_fake);\n                    this.$cache.s_to.addClass(\"state_hover\");\n                    this.$cache.s_to.addClass(\"type_last\");\n                    this.$cache.s_from.removeClass(\"type_last\");\n                    break;\n                case \"both\":\n                    this.coords.p_gap_left = this.toFixed(this.coords.p_pointer - this.coords.p_from_fake);\n                    this.coords.p_gap_right = this.toFixed(this.coords.p_to_fake - this.coords.p_pointer);\n                    this.$cache.s_to.removeClass(\"type_last\");\n                    this.$cache.s_from.removeClass(\"type_last\");\n                    break;\n            }\n        },\n\n        /**\n         * Then slider is disabled\n         * appends extra layer with opacity\n         */\n        appendDisableMask: function () {\n            this.$cache.cont.append(disable_html);\n            this.$cache.cont.addClass(\"irs-disabled\");\n        },\n\n        /**\n         * Then slider is not disabled\n         * remove disable mask\n         */\n        removeDisableMask: function () {\n            this.$cache.cont.remove(\".irs-disable-mask\");\n            this.$cache.cont.removeClass(\"irs-disabled\");\n        },\n\n        /**\n         * Remove slider instance\n         * and unbind all events\n         */\n        remove: function () {\n            this.$cache.cont.remove();\n            this.$cache.cont = null;\n\n            this.$cache.line.off(\"keydown.irs_\" + this.plugin_count);\n\n            this.$cache.body.off(\"touchmove.irs_\" + this.plugin_count);\n            this.$cache.body.off(\"mousemove.irs_\" + this.plugin_count);\n\n            this.$cache.win.off(\"touchend.irs_\" + this.plugin_count);\n            this.$cache.win.off(\"mouseup.irs_\" + this.plugin_count);\n\n            if (is_old_ie) {\n                this.$cache.body.off(\"mouseup.irs_\" + this.plugin_count);\n                this.$cache.body.off(\"mouseleave.irs_\" + this.plugin_count);\n            }\n\n            this.$cache.grid_labels = [];\n            this.coords.big = [];\n            this.coords.big_w = [];\n            this.coords.big_p = [];\n            this.coords.big_x = [];\n\n            cancelAnimationFrame(this.raf_id);\n        },\n\n        /**\n         * bind all slider events\n         */\n        bindEvents: function () {\n            if (this.no_diapason) {\n                return;\n            }\n\n            this.$cache.body.on(\"touchmove.irs_\" + this.plugin_count, this.pointerMove.bind(this));\n            this.$cache.body.on(\"mousemove.irs_\" + this.plugin_count, this.pointerMove.bind(this));\n\n            this.$cache.win.on(\"touchend.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n            this.$cache.win.on(\"mouseup.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n\n            this.$cache.line.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            this.$cache.line.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n            this.$cache.line.on(\"focus.irs_\" + this.plugin_count, this.pointerFocus.bind(this));\n\n            if (this.options.drag_interval && this.options.type === \"double\") {\n                this.$cache.bar.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"both\"));\n                this.$cache.bar.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"both\"));\n            } else {\n                this.$cache.bar.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.bar.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            }\n\n            if (this.options.type === \"single\") {\n                this.$cache.single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.s_single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.shad_single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n                this.$cache.single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.s_single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"single\"));\n                this.$cache.edge.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            } else {\n                this.$cache.single.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, null));\n                this.$cache.single.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, null));\n\n                this.$cache.from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.s_from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.s_to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.shad_from.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_to.on(\"touchstart.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n\n                this.$cache.from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.s_from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"from\"));\n                this.$cache.to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.s_to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerDown.bind(this, \"to\"));\n                this.$cache.shad_from.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n                this.$cache.shad_to.on(\"mousedown.irs_\" + this.plugin_count, this.pointerClick.bind(this, \"click\"));\n            }\n\n            if (this.options.keyboard) {\n                this.$cache.line.on(\"keydown.irs_\" + this.plugin_count, this.key.bind(this, \"keyboard\"));\n            }\n\n            if (is_old_ie) {\n                this.$cache.body.on(\"mouseup.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n                this.$cache.body.on(\"mouseleave.irs_\" + this.plugin_count, this.pointerUp.bind(this));\n            }\n        },\n\n        /**\n         * Focus with tabIndex\n         *\n         * @param e {Object} event object\n         */\n        pointerFocus: function (e) {\n            if (!this.target) {\n                var x;\n                var $handle;\n\n                if (this.options.type === \"single\") {\n                    $handle = this.$cache.single;\n                } else {\n                    $handle = this.$cache.from;\n                }\n\n                x = $handle.offset().left;\n                x += ($handle.width() / 2) - 1;\n\n                this.pointerClick(\"single\", {preventDefault: function () {}, pageX: x});\n            }\n        },\n\n        /**\n         * Mousemove or touchmove\n         * only for handlers\n         *\n         * @param e {Object} event object\n         */\n        pointerMove: function (e) {\n            if (!this.dragging) {\n                return;\n            }\n\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            this.coords.x_pointer = x - this.coords.x_gap;\n\n            this.calc();\n        },\n\n        /**\n         * Mouseup or touchend\n         * only for handlers\n         *\n         * @param e {Object} event object\n         */\n        pointerUp: function (e) {\n            if (this.current_plugin !== this.plugin_count) {\n                return;\n            }\n\n            if (this.is_active) {\n                this.is_active = false;\n            } else {\n                return;\n            }\n\n            this.$cache.cont.find(\".state_hover\").removeClass(\"state_hover\");\n\n            this.force_redraw = true;\n\n            if (is_old_ie) {\n                $(\"*\").prop(\"unselectable\", false);\n            }\n\n            this.updateScene();\n            this.restoreOriginalMinInterval();\n\n            // callbacks call\n            if ($.contains(this.$cache.cont[0], e.target) || this.dragging) {\n                this.callOnFinish();\n            }\n\n            this.dragging = false;\n        },\n\n        /**\n         * Mousedown or touchstart\n         * only for handlers\n         *\n         * @param target {String|null}\n         * @param e {Object} event object\n         */\n        pointerDown: function (target, e) {\n            e.preventDefault();\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            if (e.button === 2) {\n                return;\n            }\n\n            if (target === \"both\") {\n                this.setTempMinInterval();\n            }\n\n            if (!target) {\n                target = this.target || \"from\";\n            }\n\n            this.current_plugin = this.plugin_count;\n            this.target = target;\n\n            this.is_active = true;\n            this.dragging = true;\n\n            this.coords.x_gap = this.$cache.rs.offset().left;\n            this.coords.x_pointer = x - this.coords.x_gap;\n\n            this.calcPointerPercent();\n            this.changeLevel(target);\n\n            if (is_old_ie) {\n                $(\"*\").prop(\"unselectable\", true);\n            }\n\n            this.$cache.line.trigger(\"focus\");\n\n            this.updateScene();\n        },\n\n        /**\n         * Mousedown or touchstart\n         * for other slider elements, like diapason line\n         *\n         * @param target {String}\n         * @param e {Object} event object\n         */\n        pointerClick: function (target, e) {\n            e.preventDefault();\n            var x = e.pageX || e.originalEvent.touches && e.originalEvent.touches[0].pageX;\n            if (e.button === 2) {\n                return;\n            }\n\n            this.current_plugin = this.plugin_count;\n            this.target = target;\n\n            this.is_click = true;\n            this.coords.x_gap = this.$cache.rs.offset().left;\n            this.coords.x_pointer = +(x - this.coords.x_gap).toFixed();\n\n            this.force_redraw = true;\n            this.calc();\n\n            this.$cache.line.trigger(\"focus\");\n        },\n\n        /**\n         * Keyborard controls for focused slider\n         *\n         * @param target {String}\n         * @param e {Object} event object\n         * @returns {boolean|undefined}\n         */\n        key: function (target, e) {\n            if (this.current_plugin !== this.plugin_count || e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\n                return;\n            }\n\n            switch (e.which) {\n                case 83: // W\n                case 65: // A\n                case 40: // DOWN\n                case 37: // LEFT\n                    e.preventDefault();\n                    this.moveByKey(false);\n                    break;\n\n                case 87: // S\n                case 68: // D\n                case 38: // UP\n                case 39: // RIGHT\n                    e.preventDefault();\n                    this.moveByKey(true);\n                    break;\n            }\n\n            return true;\n        },\n\n        /**\n         * Move by key\n         *\n         * @param right {boolean} direction to move\n         */\n        moveByKey: function (right) {\n            var p = this.coords.p_pointer;\n            var p_step = (this.options.max - this.options.min) / 100;\n            p_step = this.options.step / p_step;\n\n            if (right) {\n                p += p_step;\n            } else {\n                p -= p_step;\n            }\n\n            this.coords.x_pointer = this.toFixed(this.coords.w_rs / 100 * p);\n            this.is_key = true;\n            this.calc();\n        },\n\n        /**\n         * Set visibility and content\n         * of Min and Max labels\n         */\n        setMinMax: function () {\n            if (!this.options) {\n                return;\n            }\n\n            if (this.options.hide_min_max) {\n                this.$cache.min[0].style.display = \"none\";\n                this.$cache.max[0].style.display = \"none\";\n                return;\n            }\n\n            if (this.options.values.length) {\n                this.$cache.min.html(this.decorate(this.options.p_values[this.options.min]));\n                this.$cache.max.html(this.decorate(this.options.p_values[this.options.max]));\n            } else {\n                var min_pretty = this._prettify(this.options.min);\n                var max_pretty = this._prettify(this.options.max);\n\n                this.result.min_pretty = min_pretty;\n                this.result.max_pretty = max_pretty;\n\n                this.$cache.min.html(this.decorate(min_pretty, this.options.min));\n                this.$cache.max.html(this.decorate(max_pretty, this.options.max));\n            }\n\n            this.labels.w_min = this.$cache.min.outerWidth(false);\n            this.labels.w_max = this.$cache.max.outerWidth(false);\n        },\n\n        /**\n         * Then dragging interval, prevent interval collapsing\n         * using min_interval option\n         */\n        setTempMinInterval: function () {\n            var interval = this.result.to - this.result.from;\n\n            if (this.old_min_interval === null) {\n                this.old_min_interval = this.options.min_interval;\n            }\n\n            this.options.min_interval = interval;\n        },\n\n        /**\n         * Restore min_interval option to original\n         */\n        restoreOriginalMinInterval: function () {\n            if (this.old_min_interval !== null) {\n                this.options.min_interval = this.old_min_interval;\n                this.old_min_interval = null;\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Calculations\n\n        /**\n         * All calculations and measures start here\n         *\n         * @param update {boolean=}\n         */\n        calc: function (update) {\n            if (!this.options) {\n                return;\n            }\n\n            this.calc_count++;\n\n            if (this.calc_count === 10 || update) {\n                this.calc_count = 0;\n                this.coords.w_rs = this.$cache.rs.outerWidth(false);\n\n                this.calcHandlePercent();\n            }\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            this.calcPointerPercent();\n            var handle_x = this.getHandleX();\n\n\n            if (this.target === \"both\") {\n                this.coords.p_gap = 0;\n                handle_x = this.getHandleX();\n            }\n\n            if (this.target === \"click\") {\n                this.coords.p_gap = this.coords.p_handle / 2;\n                handle_x = this.getHandleX();\n\n                if (this.options.drag_interval) {\n                    this.target = \"both_one\";\n                } else {\n                    this.target = this.chooseHandle(handle_x);\n                }\n            }\n\n            switch (this.target) {\n                case \"base\":\n                    var w = (this.options.max - this.options.min) / 100,\n                        f = (this.result.from - this.options.min) / w,\n                        t = (this.result.to - this.options.min) / w;\n\n                    this.coords.p_single_real = this.toFixed(f);\n                    this.coords.p_from_real = this.toFixed(f);\n                    this.coords.p_to_real = this.toFixed(t);\n\n                    this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n\n                    this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real);\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    this.target = null;\n\n                    break;\n\n                case \"single\":\n                    if (this.options.from_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_single_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_single_real = this.calcWithStep(this.coords.p_single_real);\n                    this.coords.p_single_real = this.checkDiapason(this.coords.p_single_real, this.options.from_min, this.options.from_max);\n\n                    this.coords.p_single_fake = this.convertToFakePercent(this.coords.p_single_real);\n\n                    break;\n\n                case \"from\":\n                    if (this.options.from_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_from_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real);\n                    if (this.coords.p_from_real > this.coords.p_to_real) {\n                        this.coords.p_from_real = this.coords.p_to_real;\n                    }\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n                    this.coords.p_from_real = this.checkMaxInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    break;\n\n                case \"to\":\n                    if (this.options.to_fixed) {\n                        break;\n                    }\n\n                    this.coords.p_to_real = this.convertToRealPercent(handle_x);\n                    this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real);\n                    if (this.coords.p_to_real < this.coords.p_from_real) {\n                        this.coords.p_to_real = this.coords.p_from_real;\n                    }\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n                    this.coords.p_to_real = this.checkMaxInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n\n                case \"both\":\n                    if (this.options.from_fixed || this.options.to_fixed) {\n                        break;\n                    }\n\n                    handle_x = this.toFixed(handle_x + (this.coords.p_handle * 0.001));\n\n                    this.coords.p_from_real = this.convertToRealPercent(handle_x) - this.coords.p_gap_left;\n                    this.coords.p_from_real = this.calcWithStep(this.coords.p_from_real);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_real = this.checkMinInterval(this.coords.p_from_real, this.coords.p_to_real, \"from\");\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    this.coords.p_to_real = this.convertToRealPercent(handle_x) + this.coords.p_gap_right;\n                    this.coords.p_to_real = this.calcWithStep(this.coords.p_to_real);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_real = this.checkMinInterval(this.coords.p_to_real, this.coords.p_from_real, \"to\");\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n\n                case \"both_one\":\n                    if (this.options.from_fixed || this.options.to_fixed) {\n                        break;\n                    }\n\n                    var real_x = this.convertToRealPercent(handle_x),\n                        from = this.result.from_percent,\n                        to = this.result.to_percent,\n                        full = to - from,\n                        half = full / 2,\n                        new_from = real_x - half,\n                        new_to = real_x + half;\n\n                    if (new_from < 0) {\n                        new_from = 0;\n                        new_to = new_from + full;\n                    }\n\n                    if (new_to > 100) {\n                        new_to = 100;\n                        new_from = new_to - full;\n                    }\n\n                    this.coords.p_from_real = this.calcWithStep(new_from);\n                    this.coords.p_from_real = this.checkDiapason(this.coords.p_from_real, this.options.from_min, this.options.from_max);\n                    this.coords.p_from_fake = this.convertToFakePercent(this.coords.p_from_real);\n\n                    this.coords.p_to_real = this.calcWithStep(new_to);\n                    this.coords.p_to_real = this.checkDiapason(this.coords.p_to_real, this.options.to_min, this.options.to_max);\n                    this.coords.p_to_fake = this.convertToFakePercent(this.coords.p_to_real);\n\n                    break;\n            }\n\n            if (this.options.type === \"single\") {\n                this.coords.p_bar_x = (this.coords.p_handle / 2);\n                this.coords.p_bar_w = this.coords.p_single_fake;\n\n                this.result.from_percent = this.coords.p_single_real;\n                this.result.from = this.convertToValue(this.coords.p_single_real);\n                this.result.from_pretty = this._prettify(this.result.from);\n\n                if (this.options.values.length) {\n                    this.result.from_value = this.options.values[this.result.from];\n                }\n            } else {\n                this.coords.p_bar_x = this.toFixed(this.coords.p_from_fake + (this.coords.p_handle / 2));\n                this.coords.p_bar_w = this.toFixed(this.coords.p_to_fake - this.coords.p_from_fake);\n\n                this.result.from_percent = this.coords.p_from_real;\n                this.result.from = this.convertToValue(this.coords.p_from_real);\n                this.result.from_pretty = this._prettify(this.result.from);\n                this.result.to_percent = this.coords.p_to_real;\n                this.result.to = this.convertToValue(this.coords.p_to_real);\n                this.result.to_pretty = this._prettify(this.result.to);\n\n                if (this.options.values.length) {\n                    this.result.from_value = this.options.values[this.result.from];\n                    this.result.to_value = this.options.values[this.result.to];\n                }\n            }\n\n            this.calcMinMax();\n            this.calcLabels();\n        },\n\n\n        /**\n         * calculates pointer X in percent\n         */\n        calcPointerPercent: function () {\n            if (!this.coords.w_rs) {\n                this.coords.p_pointer = 0;\n                return;\n            }\n\n            if (this.coords.x_pointer < 0 || isNaN(this.coords.x_pointer)  ) {\n                this.coords.x_pointer = 0;\n            } else if (this.coords.x_pointer > this.coords.w_rs) {\n                this.coords.x_pointer = this.coords.w_rs;\n            }\n\n            this.coords.p_pointer = this.toFixed(this.coords.x_pointer / this.coords.w_rs * 100);\n        },\n\n        convertToRealPercent: function (fake) {\n            var full = 100 - this.coords.p_handle;\n            return fake / full * 100;\n        },\n\n        convertToFakePercent: function (real) {\n            var full = 100 - this.coords.p_handle;\n            return real / 100 * full;\n        },\n\n        getHandleX: function () {\n            var max = 100 - this.coords.p_handle,\n                x = this.toFixed(this.coords.p_pointer - this.coords.p_gap);\n\n            if (x < 0) {\n                x = 0;\n            } else if (x > max) {\n                x = max;\n            }\n\n            return x;\n        },\n\n        calcHandlePercent: function () {\n            if (this.options.type === \"single\") {\n                this.coords.w_handle = this.$cache.s_single.outerWidth(false);\n            } else {\n                this.coords.w_handle = this.$cache.s_from.outerWidth(false);\n            }\n\n            this.coords.p_handle = this.toFixed(this.coords.w_handle / this.coords.w_rs * 100);\n        },\n\n        /**\n         * Find closest handle to pointer click\n         *\n         * @param real_x {Number}\n         * @returns {String}\n         */\n        chooseHandle: function (real_x) {\n            if (this.options.type === \"single\") {\n                return \"single\";\n            } else {\n                var m_point = this.coords.p_from_real + ((this.coords.p_to_real - this.coords.p_from_real) / 2);\n                if (real_x >= m_point) {\n                    return this.options.to_fixed ? \"from\" : \"to\";\n                } else {\n                    return this.options.from_fixed ? \"to\" : \"from\";\n                }\n            }\n        },\n\n        /**\n         * Measure Min and Max labels width in percent\n         */\n        calcMinMax: function () {\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            this.labels.p_min = this.labels.w_min / this.coords.w_rs * 100;\n            this.labels.p_max = this.labels.w_max / this.coords.w_rs * 100;\n        },\n\n        /**\n         * Measure labels width and X in percent\n         */\n        calcLabels: function () {\n            if (!this.coords.w_rs || this.options.hide_from_to) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n\n                this.labels.w_single = this.$cache.single.outerWidth(false);\n                this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100;\n                this.labels.p_single_left = this.coords.p_single_fake + (this.coords.p_handle / 2) - (this.labels.p_single_fake / 2);\n                this.labels.p_single_left = this.checkEdges(this.labels.p_single_left, this.labels.p_single_fake);\n\n            } else {\n\n                this.labels.w_from = this.$cache.from.outerWidth(false);\n                this.labels.p_from_fake = this.labels.w_from / this.coords.w_rs * 100;\n                this.labels.p_from_left = this.coords.p_from_fake + (this.coords.p_handle / 2) - (this.labels.p_from_fake / 2);\n                this.labels.p_from_left = this.toFixed(this.labels.p_from_left);\n                this.labels.p_from_left = this.checkEdges(this.labels.p_from_left, this.labels.p_from_fake);\n\n                this.labels.w_to = this.$cache.to.outerWidth(false);\n                this.labels.p_to_fake = this.labels.w_to / this.coords.w_rs * 100;\n                this.labels.p_to_left = this.coords.p_to_fake + (this.coords.p_handle / 2) - (this.labels.p_to_fake / 2);\n                this.labels.p_to_left = this.toFixed(this.labels.p_to_left);\n                this.labels.p_to_left = this.checkEdges(this.labels.p_to_left, this.labels.p_to_fake);\n\n                this.labels.w_single = this.$cache.single.outerWidth(false);\n                this.labels.p_single_fake = this.labels.w_single / this.coords.w_rs * 100;\n                this.labels.p_single_left = ((this.labels.p_from_left + this.labels.p_to_left + this.labels.p_to_fake) / 2) - (this.labels.p_single_fake / 2);\n                this.labels.p_single_left = this.toFixed(this.labels.p_single_left);\n                this.labels.p_single_left = this.checkEdges(this.labels.p_single_left, this.labels.p_single_fake);\n\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Drawings\n\n        /**\n         * Main function called in request animation frame\n         * to update everything\n         */\n        updateScene: function () {\n            if (this.raf_id) {\n                cancelAnimationFrame(this.raf_id);\n                this.raf_id = null;\n            }\n\n            clearTimeout(this.update_tm);\n            this.update_tm = null;\n\n            if (!this.options) {\n                return;\n            }\n\n            this.drawHandles();\n\n            if (this.is_active) {\n                this.raf_id = requestAnimationFrame(this.updateScene.bind(this));\n            } else {\n                this.update_tm = setTimeout(this.updateScene.bind(this), 300);\n            }\n        },\n\n        /**\n         * Draw handles\n         */\n        drawHandles: function () {\n            this.coords.w_rs = this.$cache.rs.outerWidth(false);\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (this.coords.w_rs !== this.coords.w_rs_old) {\n                this.target = \"base\";\n                this.is_resize = true;\n            }\n\n            if (this.coords.w_rs !== this.coords.w_rs_old || this.force_redraw) {\n                this.setMinMax();\n                this.calc(true);\n                this.drawLabels();\n                if (this.options.grid) {\n                    this.calcGridMargin();\n                    this.calcGridLabels();\n                }\n                this.force_redraw = true;\n                this.coords.w_rs_old = this.coords.w_rs;\n                this.drawShadow();\n            }\n\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (!this.dragging && !this.force_redraw && !this.is_key) {\n                return;\n            }\n\n            if (this.old_from !== this.result.from || this.old_to !== this.result.to || this.force_redraw || this.is_key) {\n\n                this.drawLabels();\n\n                this.$cache.bar[0].style.left = this.coords.p_bar_x + \"%\";\n                this.$cache.bar[0].style.width = this.coords.p_bar_w + \"%\";\n\n                if (this.options.type === \"single\") {\n                    this.$cache.bar[0].style.left = 0;\n                    this.$cache.bar[0].style.width = this.coords.p_bar_w + this.coords.p_bar_x + \"%\";\n\n                    this.$cache.s_single[0].style.left = this.coords.p_single_fake + \"%\";\n\n                    this.$cache.single[0].style.left = this.labels.p_single_left + \"%\";\n                } else {\n                    this.$cache.s_from[0].style.left = this.coords.p_from_fake + \"%\";\n                    this.$cache.s_to[0].style.left = this.coords.p_to_fake + \"%\";\n\n                    if (this.old_from !== this.result.from || this.force_redraw) {\n                        this.$cache.from[0].style.left = this.labels.p_from_left + \"%\";\n                    }\n                    if (this.old_to !== this.result.to || this.force_redraw) {\n                        this.$cache.to[0].style.left = this.labels.p_to_left + \"%\";\n                    }\n\n                    this.$cache.single[0].style.left = this.labels.p_single_left + \"%\";\n                }\n\n                this.writeToInput();\n\n                if ((this.old_from !== this.result.from || this.old_to !== this.result.to) && !this.is_start) {\n                    this.$cache.input.trigger(\"change\");\n                    this.$cache.input.trigger(\"input\");\n                }\n\n                this.old_from = this.result.from;\n                this.old_to = this.result.to;\n\n                // callbacks call\n                if (!this.is_resize && !this.is_update && !this.is_start && !this.is_finish) {\n                    this.callOnChange();\n                }\n                if (this.is_key || this.is_click) {\n                    this.is_key = false;\n                    this.is_click = false;\n                    this.callOnFinish();\n                }\n\n                this.is_update = false;\n                this.is_resize = false;\n                this.is_finish = false;\n            }\n\n            this.is_start = false;\n            this.is_key = false;\n            this.is_click = false;\n            this.force_redraw = false;\n        },\n\n        /**\n         * Draw labels\n         * measure labels collisions\n         * collapse close labels\n         */\n        drawLabels: function () {\n            if (!this.options) {\n                return;\n            }\n\n            var values_num = this.options.values.length;\n            var p_values = this.options.p_values;\n            var text_single;\n            var text_from;\n            var text_to;\n            var from_pretty;\n            var to_pretty;\n\n            if (this.options.hide_from_to) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n\n                if (values_num) {\n                    text_single = this.decorate(p_values[this.result.from]);\n                    this.$cache.single.html(text_single);\n                } else {\n                    from_pretty = this._prettify(this.result.from);\n\n                    text_single = this.decorate(from_pretty, this.result.from);\n                    this.$cache.single.html(text_single);\n                }\n\n                this.calcLabels();\n\n                if (this.labels.p_single_left < this.labels.p_min + 1) {\n                    this.$cache.min[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.min[0].style.visibility = \"visible\";\n                }\n\n                if (this.labels.p_single_left + this.labels.p_single_fake > 100 - this.labels.p_max - 1) {\n                    this.$cache.max[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.max[0].style.visibility = \"visible\";\n                }\n\n            } else {\n\n                if (values_num) {\n\n                    if (this.options.decorate_both) {\n                        text_single = this.decorate(p_values[this.result.from]);\n                        text_single += this.options.values_separator;\n                        text_single += this.decorate(p_values[this.result.to]);\n                    } else {\n                        text_single = this.decorate(p_values[this.result.from] + this.options.values_separator + p_values[this.result.to]);\n                    }\n                    text_from = this.decorate(p_values[this.result.from]);\n                    text_to = this.decorate(p_values[this.result.to]);\n\n                    this.$cache.single.html(text_single);\n                    this.$cache.from.html(text_from);\n                    this.$cache.to.html(text_to);\n\n                } else {\n                    from_pretty = this._prettify(this.result.from);\n                    to_pretty = this._prettify(this.result.to);\n\n                    if (this.options.decorate_both) {\n                        text_single = this.decorate(from_pretty, this.result.from);\n                        text_single += this.options.values_separator;\n                        text_single += this.decorate(to_pretty, this.result.to);\n                    } else {\n                        text_single = this.decorate(from_pretty + this.options.values_separator + to_pretty, this.result.to);\n                    }\n                    text_from = this.decorate(from_pretty, this.result.from);\n                    text_to = this.decorate(to_pretty, this.result.to);\n\n                    this.$cache.single.html(text_single);\n                    this.$cache.from.html(text_from);\n                    this.$cache.to.html(text_to);\n\n                }\n\n                this.calcLabels();\n\n                var min = Math.min(this.labels.p_single_left, this.labels.p_from_left),\n                    single_left = this.labels.p_single_left + this.labels.p_single_fake,\n                    to_left = this.labels.p_to_left + this.labels.p_to_fake,\n                    max = Math.max(single_left, to_left);\n\n                if (this.labels.p_from_left + this.labels.p_from_fake >= this.labels.p_to_left) {\n                    this.$cache.from[0].style.visibility = \"hidden\";\n                    this.$cache.to[0].style.visibility = \"hidden\";\n                    this.$cache.single[0].style.visibility = \"visible\";\n\n                    if (this.result.from === this.result.to) {\n                        if (this.target === \"from\") {\n                            this.$cache.from[0].style.visibility = \"visible\";\n                        } else if (this.target === \"to\") {\n                            this.$cache.to[0].style.visibility = \"visible\";\n                        } else if (!this.target) {\n                            this.$cache.from[0].style.visibility = \"visible\";\n                        }\n                        this.$cache.single[0].style.visibility = \"hidden\";\n                        max = to_left;\n                    } else {\n                        this.$cache.from[0].style.visibility = \"hidden\";\n                        this.$cache.to[0].style.visibility = \"hidden\";\n                        this.$cache.single[0].style.visibility = \"visible\";\n                        max = Math.max(single_left, to_left);\n                    }\n                } else {\n                    this.$cache.from[0].style.visibility = \"visible\";\n                    this.$cache.to[0].style.visibility = \"visible\";\n                    this.$cache.single[0].style.visibility = \"hidden\";\n                }\n\n                if (min < this.labels.p_min + 1) {\n                    this.$cache.min[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.min[0].style.visibility = \"visible\";\n                }\n\n                if (max > 100 - this.labels.p_max - 1) {\n                    this.$cache.max[0].style.visibility = \"hidden\";\n                } else {\n                    this.$cache.max[0].style.visibility = \"visible\";\n                }\n\n            }\n        },\n\n        /**\n         * Draw shadow intervals\n         */\n        drawShadow: function () {\n            var o = this.options,\n                c = this.$cache,\n\n                is_from_min = typeof o.from_min === \"number\" && !isNaN(o.from_min),\n                is_from_max = typeof o.from_max === \"number\" && !isNaN(o.from_max),\n                is_to_min = typeof o.to_min === \"number\" && !isNaN(o.to_min),\n                is_to_max = typeof o.to_max === \"number\" && !isNaN(o.to_max),\n\n                from_min,\n                from_max,\n                to_min,\n                to_max;\n\n            if (o.type === \"single\") {\n                if (o.from_shadow && (is_from_min || is_from_max)) {\n                    from_min = this.convertToPercent(is_from_min ? o.from_min : o.min);\n                    from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\n                    from_min = this.toFixed(from_min - (this.coords.p_handle / 100 * from_min));\n                    from_max = this.toFixed(from_max - (this.coords.p_handle / 100 * from_max));\n                    from_min = from_min + (this.coords.p_handle / 2);\n\n                    c.shad_single[0].style.display = \"block\";\n                    c.shad_single[0].style.left = from_min + \"%\";\n                    c.shad_single[0].style.width = from_max + \"%\";\n                } else {\n                    c.shad_single[0].style.display = \"none\";\n                }\n            } else {\n                if (o.from_shadow && (is_from_min || is_from_max)) {\n                    from_min = this.convertToPercent(is_from_min ? o.from_min : o.min);\n                    from_max = this.convertToPercent(is_from_max ? o.from_max : o.max) - from_min;\n                    from_min = this.toFixed(from_min - (this.coords.p_handle / 100 * from_min));\n                    from_max = this.toFixed(from_max - (this.coords.p_handle / 100 * from_max));\n                    from_min = from_min + (this.coords.p_handle / 2);\n\n                    c.shad_from[0].style.display = \"block\";\n                    c.shad_from[0].style.left = from_min + \"%\";\n                    c.shad_from[0].style.width = from_max + \"%\";\n                } else {\n                    c.shad_from[0].style.display = \"none\";\n                }\n\n                if (o.to_shadow && (is_to_min || is_to_max)) {\n                    to_min = this.convertToPercent(is_to_min ? o.to_min : o.min);\n                    to_max = this.convertToPercent(is_to_max ? o.to_max : o.max) - to_min;\n                    to_min = this.toFixed(to_min - (this.coords.p_handle / 100 * to_min));\n                    to_max = this.toFixed(to_max - (this.coords.p_handle / 100 * to_max));\n                    to_min = to_min + (this.coords.p_handle / 2);\n\n                    c.shad_to[0].style.display = \"block\";\n                    c.shad_to[0].style.left = to_min + \"%\";\n                    c.shad_to[0].style.width = to_max + \"%\";\n                } else {\n                    c.shad_to[0].style.display = \"none\";\n                }\n            }\n        },\n\n\n\n        /**\n         * Write values to input element\n         */\n        writeToInput: function () {\n            if (this.options.type === \"single\") {\n                if (this.options.values.length) {\n                    this.$cache.input.prop(\"value\", this.result.from_value);\n                } else {\n                    this.$cache.input.prop(\"value\", this.result.from);\n                }\n                this.$cache.input.data(\"from\", this.result.from);\n            } else {\n                if (this.options.values.length) {\n                    this.$cache.input.prop(\"value\", this.result.from_value + this.options.input_values_separator + this.result.to_value);\n                } else {\n                    this.$cache.input.prop(\"value\", this.result.from + this.options.input_values_separator + this.result.to);\n                }\n                this.$cache.input.data(\"from\", this.result.from);\n                this.$cache.input.data(\"to\", this.result.to);\n            }\n        },\n\n\n\n        // =============================================================================================================\n        // Callbacks\n\n        callOnStart: function () {\n            this.writeToInput();\n\n            if (this.options.onStart && typeof this.options.onStart === \"function\") {\n                if (this.options.scope) {\n                    this.options.onStart.call(this.options.scope, this.result);\n                } else {\n                    this.options.onStart(this.result);\n                }\n            }\n        },\n        callOnChange: function () {\n            this.writeToInput();\n\n            if (this.options.onChange && typeof this.options.onChange === \"function\") {\n                if (this.options.scope) {\n                    this.options.onChange.call(this.options.scope, this.result);\n                } else {\n                    this.options.onChange(this.result);\n                }\n            }\n        },\n        callOnFinish: function () {\n            this.writeToInput();\n\n            if (this.options.onFinish && typeof this.options.onFinish === \"function\") {\n                if (this.options.scope) {\n                    this.options.onFinish.call(this.options.scope, this.result);\n                } else {\n                    this.options.onFinish(this.result);\n                }\n            }\n        },\n        callOnUpdate: function () {\n            this.writeToInput();\n\n            if (this.options.onUpdate && typeof this.options.onUpdate === \"function\") {\n                if (this.options.scope) {\n                    this.options.onUpdate.call(this.options.scope, this.result);\n                } else {\n                    this.options.onUpdate(this.result);\n                }\n            }\n        },\n\n\n\n\n        // =============================================================================================================\n        // Service methods\n\n        toggleInput: function () {\n            this.$cache.input.toggleClass(\"irs-hidden-input\");\n\n            if (this.has_tab_index) {\n                this.$cache.input.prop(\"tabindex\", -1);\n            } else {\n                this.$cache.input.removeProp(\"tabindex\");\n            }\n\n            this.has_tab_index = !this.has_tab_index;\n        },\n\n        /**\n         * Convert real value to percent\n         *\n         * @param value {Number} X in real\n         * @param no_min {boolean=} don't use min value\n         * @returns {Number} X in percent\n         */\n        convertToPercent: function (value, no_min) {\n            var diapason = this.options.max - this.options.min,\n                one_percent = diapason / 100,\n                val, percent;\n\n            if (!diapason) {\n                this.no_diapason = true;\n                return 0;\n            }\n\n            if (no_min) {\n                val = value;\n            } else {\n                val = value - this.options.min;\n            }\n\n            percent = val / one_percent;\n\n            return this.toFixed(percent);\n        },\n\n        /**\n         * Convert percent to real values\n         *\n         * @param percent {Number} X in percent\n         * @returns {Number} X in real\n         */\n        convertToValue: function (percent) {\n            var min = this.options.min,\n                max = this.options.max,\n                min_decimals = min.toString().split(\".\")[1],\n                max_decimals = max.toString().split(\".\")[1],\n                min_length, max_length,\n                avg_decimals = 0,\n                abs = 0;\n\n            if (percent === 0) {\n                return this.options.min;\n            }\n            if (percent === 100) {\n                return this.options.max;\n            }\n\n\n            if (min_decimals) {\n                min_length = min_decimals.length;\n                avg_decimals = min_length;\n            }\n            if (max_decimals) {\n                max_length = max_decimals.length;\n                avg_decimals = max_length;\n            }\n            if (min_length && max_length) {\n                avg_decimals = (min_length >= max_length) ? min_length : max_length;\n            }\n\n            if (min < 0) {\n                abs = Math.abs(min);\n                min = +(min + abs).toFixed(avg_decimals);\n                max = +(max + abs).toFixed(avg_decimals);\n            }\n\n            var number = ((max - min) / 100 * percent) + min,\n                string = this.options.step.toString().split(\".\")[1],\n                result;\n\n            if (string) {\n                number = +number.toFixed(string.length);\n            } else {\n                number = number / this.options.step;\n                number = number * this.options.step;\n\n                number = +number.toFixed(0);\n            }\n\n            if (abs) {\n                number -= abs;\n            }\n\n            if (string) {\n                result = +number.toFixed(string.length);\n            } else {\n                result = this.toFixed(number);\n            }\n\n            if (result < this.options.min) {\n                result = this.options.min;\n            } else if (result > this.options.max) {\n                result = this.options.max;\n            }\n\n            return result;\n        },\n\n        /**\n         * Round percent value with step\n         *\n         * @param percent {Number}\n         * @returns percent {Number} rounded\n         */\n        calcWithStep: function (percent) {\n            var rounded = Math.round(percent / this.coords.p_step) * this.coords.p_step;\n\n            if (rounded > 100) {\n                rounded = 100;\n            }\n            if (percent === 100) {\n                rounded = 100;\n            }\n\n            return this.toFixed(rounded);\n        },\n\n        checkMinInterval: function (p_current, p_next, type) {\n            var o = this.options,\n                current,\n                next;\n\n            if (!o.min_interval) {\n                return p_current;\n            }\n\n            current = this.convertToValue(p_current);\n            next = this.convertToValue(p_next);\n\n            if (type === \"from\") {\n\n                if (next - current < o.min_interval) {\n                    current = next - o.min_interval;\n                }\n\n            } else {\n\n                if (current - next < o.min_interval) {\n                    current = next + o.min_interval;\n                }\n\n            }\n\n            return this.convertToPercent(current);\n        },\n\n        checkMaxInterval: function (p_current, p_next, type) {\n            var o = this.options,\n                current,\n                next;\n\n            if (!o.max_interval) {\n                return p_current;\n            }\n\n            current = this.convertToValue(p_current);\n            next = this.convertToValue(p_next);\n\n            if (type === \"from\") {\n\n                if (next - current > o.max_interval) {\n                    current = next - o.max_interval;\n                }\n\n            } else {\n\n                if (current - next > o.max_interval) {\n                    current = next + o.max_interval;\n                }\n\n            }\n\n            return this.convertToPercent(current);\n        },\n\n        checkDiapason: function (p_num, min, max) {\n            var num = this.convertToValue(p_num),\n                o = this.options;\n\n            if (typeof min !== \"number\") {\n                min = o.min;\n            }\n\n            if (typeof max !== \"number\") {\n                max = o.max;\n            }\n\n            if (num < min) {\n                num = min;\n            }\n\n            if (num > max) {\n                num = max;\n            }\n\n            return this.convertToPercent(num);\n        },\n\n        toFixed: function (num) {\n            num = num.toFixed(20);\n            return +num;\n        },\n\n        _prettify: function (num) {\n            if (!this.options.prettify_enabled) {\n                return num;\n            }\n\n            if (this.options.prettify && typeof this.options.prettify === \"function\") {\n                return this.options.prettify(num);\n            } else {\n                return this.prettify(num);\n            }\n        },\n\n        prettify: function (num) {\n            var n = num.toString();\n            return n.replace(/(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g, \"$1\" + this.options.prettify_separator);\n        },\n\n        checkEdges: function (left, width) {\n            if (!this.options.force_edges) {\n                return this.toFixed(left);\n            }\n\n            if (left < 0) {\n                left = 0;\n            } else if (left > 100 - width) {\n                left = 100 - width;\n            }\n\n            return this.toFixed(left);\n        },\n\n        validate: function () {\n            var o = this.options,\n                r = this.result,\n                v = o.values,\n                vl = v.length,\n                value,\n                i;\n\n            if (typeof o.min === \"string\") o.min = +o.min;\n            if (typeof o.max === \"string\") o.max = +o.max;\n            if (typeof o.from === \"string\") o.from = +o.from;\n            if (typeof o.to === \"string\") o.to = +o.to;\n            if (typeof o.step === \"string\") o.step = +o.step;\n\n            if (typeof o.from_min === \"string\") o.from_min = +o.from_min;\n            if (typeof o.from_max === \"string\") o.from_max = +o.from_max;\n            if (typeof o.to_min === \"string\") o.to_min = +o.to_min;\n            if (typeof o.to_max === \"string\") o.to_max = +o.to_max;\n\n            if (typeof o.grid_num === \"string\") o.grid_num = +o.grid_num;\n\n            if (o.max < o.min) {\n                o.max = o.min;\n            }\n\n            if (vl) {\n                o.p_values = [];\n                o.min = 0;\n                o.max = vl - 1;\n                o.step = 1;\n                o.grid_num = o.max;\n                o.grid_snap = true;\n\n                for (i = 0; i < vl; i++) {\n                    value = +v[i];\n\n                    if (!isNaN(value)) {\n                        v[i] = value;\n                        value = this._prettify(value);\n                    } else {\n                        value = v[i];\n                    }\n\n                    o.p_values.push(value);\n                }\n            }\n\n            if (typeof o.from !== \"number\" || isNaN(o.from)) {\n                o.from = o.min;\n            }\n\n            if (typeof o.to !== \"number\" || isNaN(o.to)) {\n                o.to = o.max;\n            }\n\n            if (o.type === \"single\") {\n\n                if (o.from < o.min) o.from = o.min;\n                if (o.from > o.max) o.from = o.max;\n\n            } else {\n\n                if (o.from < o.min) o.from = o.min;\n                if (o.from > o.max) o.from = o.max;\n\n                if (o.to < o.min) o.to = o.min;\n                if (o.to > o.max) o.to = o.max;\n\n                if (this.update_check.from) {\n\n                    if (this.update_check.from !== o.from) {\n                        if (o.from > o.to) o.from = o.to;\n                    }\n                    if (this.update_check.to !== o.to) {\n                        if (o.to < o.from) o.to = o.from;\n                    }\n\n                }\n\n                if (o.from > o.to) o.from = o.to;\n                if (o.to < o.from) o.to = o.from;\n\n            }\n\n            if (typeof o.step !== \"number\" || isNaN(o.step) || !o.step || o.step < 0) {\n                o.step = 1;\n            }\n\n            if (typeof o.from_min === \"number\" && o.from < o.from_min) {\n                o.from = o.from_min;\n            }\n\n            if (typeof o.from_max === \"number\" && o.from > o.from_max) {\n                o.from = o.from_max;\n            }\n\n            if (typeof o.to_min === \"number\" && o.to < o.to_min) {\n                o.to = o.to_min;\n            }\n\n            if (typeof o.to_max === \"number\" && o.from > o.to_max) {\n                o.to = o.to_max;\n            }\n\n            if (r) {\n                if (r.min !== o.min) {\n                    r.min = o.min;\n                }\n\n                if (r.max !== o.max) {\n                    r.max = o.max;\n                }\n\n                if (r.from < r.min || r.from > r.max) {\n                    r.from = o.from;\n                }\n\n                if (r.to < r.min || r.to > r.max) {\n                    r.to = o.to;\n                }\n            }\n\n            if (typeof o.min_interval !== \"number\" || isNaN(o.min_interval) || !o.min_interval || o.min_interval < 0) {\n                o.min_interval = 0;\n            }\n\n            if (typeof o.max_interval !== \"number\" || isNaN(o.max_interval) || !o.max_interval || o.max_interval < 0) {\n                o.max_interval = 0;\n            }\n\n            if (o.min_interval && o.min_interval > o.max - o.min) {\n                o.min_interval = o.max - o.min;\n            }\n\n            if (o.max_interval && o.max_interval > o.max - o.min) {\n                o.max_interval = o.max - o.min;\n            }\n        },\n\n        decorate: function (num, original) {\n            var decorated = \"\",\n                o = this.options;\n\n            if (o.prefix) {\n                decorated += o.prefix;\n            }\n\n            decorated += num;\n\n            if (o.max_postfix) {\n                if (o.values.length && num === o.p_values[o.max]) {\n                    decorated += o.max_postfix;\n                    if (o.postfix) {\n                        decorated += \" \";\n                    }\n                } else if (original === o.max) {\n                    decorated += o.max_postfix;\n                    if (o.postfix) {\n                        decorated += \" \";\n                    }\n                }\n            }\n\n            if (o.postfix) {\n                decorated += o.postfix;\n            }\n\n            return decorated;\n        },\n\n        updateFrom: function () {\n            this.result.from = this.options.from;\n            this.result.from_percent = this.convertToPercent(this.result.from);\n            this.result.from_pretty = this._prettify(this.result.from);\n            if (this.options.values) {\n                this.result.from_value = this.options.values[this.result.from];\n            }\n        },\n\n        updateTo: function () {\n            this.result.to = this.options.to;\n            this.result.to_percent = this.convertToPercent(this.result.to);\n            this.result.to_pretty = this._prettify(this.result.to);\n            if (this.options.values) {\n                this.result.to_value = this.options.values[this.result.to];\n            }\n        },\n\n        updateResult: function () {\n            this.result.min = this.options.min;\n            this.result.max = this.options.max;\n            this.updateFrom();\n            this.updateTo();\n        },\n\n\n        // =============================================================================================================\n        // Grid\n\n        appendGrid: function () {\n            if (!this.options.grid) {\n                return;\n            }\n\n            var o = this.options,\n                i, z,\n\n                total = o.max - o.min,\n                big_num = o.grid_num,\n                big_p = 0,\n                big_w = 0,\n\n                small_max = 4,\n                local_small_max,\n                small_p,\n                small_w = 0,\n\n                result,\n                html = '';\n\n\n\n            this.calcGridMargin();\n\n            if (o.grid_snap) {\n                big_num = total / o.step;\n            }\n\n            if (big_num > 50) big_num = 50;\n            big_p = this.toFixed(100 / big_num);\n\n            if (big_num > 4) {\n                small_max = 3;\n            }\n            if (big_num > 7) {\n                small_max = 2;\n            }\n            if (big_num > 14) {\n                small_max = 1;\n            }\n            if (big_num > 28) {\n                small_max = 0;\n            }\n\n            for (i = 0; i < big_num + 1; i++) {\n                local_small_max = small_max;\n\n                big_w = this.toFixed(big_p * i);\n\n                if (big_w > 100) {\n                    big_w = 100;\n                }\n                this.coords.big[i] = big_w;\n\n                small_p = (big_w - (big_p * (i - 1))) / (local_small_max + 1);\n\n                for (z = 1; z <= local_small_max; z++) {\n                    if (big_w === 0) {\n                        break;\n                    }\n\n                    small_w = this.toFixed(big_w - (small_p * z));\n\n                    html += '<span class=\"irs-grid-pol small\" style=\"left: ' + small_w + '%\"></span>';\n                }\n\n                html += '<span class=\"irs-grid-pol\" style=\"left: ' + big_w + '%\"></span>';\n\n                result = this.convertToValue(big_w);\n                if (o.values.length) {\n                    result = o.p_values[result];\n                } else {\n                    result = this._prettify(result);\n                }\n\n                html += '<span class=\"irs-grid-text js-grid-text-' + i + '\" style=\"left: ' + big_w + '%\">' + result + '</span>';\n            }\n            this.coords.big_num = Math.ceil(big_num + 1);\n\n\n\n            this.$cache.cont.addClass(\"irs-with-grid\");\n            this.$cache.grid.html(html);\n            this.cacheGridLabels();\n        },\n\n        cacheGridLabels: function () {\n            var $label, i,\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i++) {\n                $label = this.$cache.grid.find(\".js-grid-text-\" + i);\n                this.$cache.grid_labels.push($label);\n            }\n\n            this.calcGridLabels();\n        },\n\n        calcGridLabels: function () {\n            var i, label, start = [], finish = [],\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i++) {\n                this.coords.big_w[i] = this.$cache.grid_labels[i].outerWidth(false);\n                this.coords.big_p[i] = this.toFixed(this.coords.big_w[i] / this.coords.w_rs * 100);\n                this.coords.big_x[i] = this.toFixed(this.coords.big_p[i] / 2);\n\n                start[i] = this.toFixed(this.coords.big[i] - this.coords.big_x[i]);\n                finish[i] = this.toFixed(start[i] + this.coords.big_p[i]);\n            }\n\n            if (this.options.force_edges) {\n                if (start[0] < -this.coords.grid_gap) {\n                    start[0] = -this.coords.grid_gap;\n                    finish[0] = this.toFixed(start[0] + this.coords.big_p[0]);\n\n                    this.coords.big_x[0] = this.coords.grid_gap;\n                }\n\n                if (finish[num - 1] > 100 + this.coords.grid_gap) {\n                    finish[num - 1] = 100 + this.coords.grid_gap;\n                    start[num - 1] = this.toFixed(finish[num - 1] - this.coords.big_p[num - 1]);\n\n                    this.coords.big_x[num - 1] = this.toFixed(this.coords.big_p[num - 1] - this.coords.grid_gap);\n                }\n            }\n\n            this.calcGridCollision(2, start, finish);\n            this.calcGridCollision(4, start, finish);\n\n            for (i = 0; i < num; i++) {\n                label = this.$cache.grid_labels[i][0];\n\n                if (this.coords.big_x[i] !== Number.POSITIVE_INFINITY) {\n                    label.style.marginLeft = -this.coords.big_x[i] + \"%\";\n                }\n            }\n        },\n\n        // Collisions Calc Beta\n        // TODO: Refactor then have plenty of time\n        calcGridCollision: function (step, start, finish) {\n            var i, next_i, label,\n                num = this.coords.big_num;\n\n            for (i = 0; i < num; i += step) {\n                next_i = i + (step / 2);\n                if (next_i >= num) {\n                    break;\n                }\n\n                label = this.$cache.grid_labels[next_i][0];\n\n                if (finish[i] <= start[next_i]) {\n                    label.style.visibility = \"visible\";\n                } else {\n                    label.style.visibility = \"hidden\";\n                }\n            }\n        },\n\n        calcGridMargin: function () {\n            if (!this.options.grid_margin) {\n                return;\n            }\n\n            this.coords.w_rs = this.$cache.rs.outerWidth(false);\n            if (!this.coords.w_rs) {\n                return;\n            }\n\n            if (this.options.type === \"single\") {\n                this.coords.w_handle = this.$cache.s_single.outerWidth(false);\n            } else {\n                this.coords.w_handle = this.$cache.s_from.outerWidth(false);\n            }\n            this.coords.p_handle = this.toFixed(this.coords.w_handle  / this.coords.w_rs * 100);\n            this.coords.grid_gap = this.toFixed((this.coords.p_handle / 2) - 0.1);\n\n            this.$cache.grid[0].style.width = this.toFixed(100 - this.coords.p_handle) + \"%\";\n            this.$cache.grid[0].style.left = this.coords.grid_gap + \"%\";\n        },\n\n\n\n        // =============================================================================================================\n        // Public methods\n\n        update: function (options) {\n            if (!this.input) {\n                return;\n            }\n\n            this.is_update = true;\n\n            this.options.from = this.result.from;\n            this.options.to = this.result.to;\n            this.update_check.from = this.result.from;\n            this.update_check.to = this.result.to;\n\n            this.options = $.extend(this.options, options);\n            this.validate();\n            this.updateResult(options);\n\n            this.toggleInput();\n            this.remove();\n            this.init(true);\n        },\n\n        reset: function () {\n            if (!this.input) {\n                return;\n            }\n\n            this.updateResult();\n            this.update();\n        },\n\n        destroy: function () {\n            if (!this.input) {\n                return;\n            }\n\n            this.toggleInput();\n            this.$cache.input.prop(\"readonly\", false);\n            $.data(this.input, \"ionRangeSlider\", null);\n\n            this.remove();\n            this.input = null;\n            this.options = null;\n        }\n    };\n\n    $.fn.ionRangeSlider = function (options) {\n        return this.each(function() {\n            if (!$.data(this, \"ionRangeSlider\")) {\n                $.data(this, \"ionRangeSlider\", new IonRangeSlider(this, options, plugin_count++));\n            }\n        });\n    };\n\n\n\n    // =================================================================================================================\n    // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n    // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n\n    // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\n\n    // MIT license\n\n    (function() {\n        var lastTime = 0;\n        var vendors = ['ms', 'moz', 'webkit', 'o'];\n        for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n            window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n            window.cancelAnimationFrame = window[vendors[x]+'CancelAnimationFrame']\n                || window[vendors[x]+'CancelRequestAnimationFrame'];\n        }\n\n        if (!window.requestAnimationFrame)\n            window.requestAnimationFrame = function(callback, element) {\n                var currTime = new Date().getTime();\n                var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n                var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n                    timeToCall);\n                lastTime = currTime + timeToCall;\n                return id;\n            };\n\n        if (!window.cancelAnimationFrame)\n            window.cancelAnimationFrame = function(id) {\n                clearTimeout(id);\n            };\n    }());\n\n}));\n","!function (t, n) {\n    \"object\" == typeof exports && \"object\" == typeof module ? module.exports = n() : \"function\" == typeof define && define.amd ? define(\"item-quantity-dropdown\", [], n) : \"object\" == typeof exports ? exports[\"item-quantity-dropdown\"] = n() : t[\"item-quantity-dropdown\"] = n()\n}(window, function () {\n    return function (t) {\n        var n = {};\n\n        function e(o) {\n            if (n[o]) return n[o].exports;\n            var r = n[o] = {i: o, l: !1, exports: {}};\n            return t[o].call(r.exports, r, r.exports, e), r.l = !0, r.exports\n        }\n\n        return e.m = t, e.c = n, e.d = function (t, n, o) {\n            e.o(t, n) || Object.defineProperty(t, n, {enumerable: !0, get: o})\n        }, e.r = function (t) {\n            \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {value: \"Module\"}), Object.defineProperty(t, \"__esModule\", {value: !0})\n        }, e.t = function (t, n) {\n            if (1 & n && (t = e(t)), 8 & n) return t;\n            if (4 & n && \"object\" == typeof t && t && t.__esModule) return t;\n            var o = Object.create(null);\n            if (e.r(o), Object.defineProperty(o, \"default\", {\n                enumerable: !0,\n                value: t\n            }), 2 & n && \"string\" != typeof t) for (var r in t) e.d(o, r, function (n) {\n                return t[n]\n            }.bind(null, r));\n            return o\n        }, e.n = function (t) {\n            var n = t && t.__esModule ? function () {\n                return t.default\n            } : function () {\n                return t\n            };\n            return e.d(n, \"a\", n), n\n        }, e.o = function (t, n) {\n            return Object.prototype.hasOwnProperty.call(t, n)\n        }, e.p = \"\", e(e.s = 0)\n    }([function (t, n, e) {\n        \"use strict\";\n        e.r(n);\n        e(1);\n        !function (t) {\n            var n = {\n                maxItems: 1 / 0,\n                minItems: 0,\n                selectionText: \"item\",\n                textPlural: \"items\",\n                controls: {\n                    position: \"right\",\n                    displayCls: \"iqdropdown-content\",\n                    controlsCls: \"iqdropdown-item-controls\",\n                    counterCls: \"counter\"\n                },\n                items: {},\n                onChange: function () {\n                },\n                beforeDecrement: function () {\n                    return !0\n                },\n                beforeIncrement: function () {\n                    return !0\n                },\n                setSelectionText: function (t, n) {\n                    var e = 1 !== n && this.textPlural.length > 0 ? this.textPlural : this.selectionText;\n                    return \"\".concat(n, \" \").concat(e)\n                }\n            };\n            t.fn.iqDropdown = function (e) {\n                return this.each(function () {\n                    var o = t(this), r = o.find(\"p.iqdropdown-selection\").last(),\n                        i = o.find(\"div.iqdropdown-menu\").find(\"div.iqdropdown-menu-option\"),\n                        u = {selectionText: r.data(\"selection-text\"), textPlural: r.data(\"text-plural\")},\n                        c = t.extend(!0, {}, n, u, e), a = {}, l = 0;\n\n                    function s() {\n                        r.html(c.setSelectionText(a, l))\n                    }\n\n                    o.click(function () {\n                        o.toggleClass(\"menu-open\")\n                    }), i.each(function () {\n                        var n = t(this), e = n.data(\"id\"), o = Number(n.data(\"defaultcount\") || \"0\");\n                        a[e] = o, l += o, function (t, n) {\n                            var e = Number(n.data(\"mincount\")), o = Number(n.data(\"maxcount\"));\n                            c.items[t] = {\n                                minCount: Number.isNaN(Number(e)) ? 0 : e,\n                                maxCount: Number.isNaN(Number(o)) ? 1 / 0 : o\n                            }\n                        }(e, n), function (n, e) {\n                            var o = t(\"<div />\").addClass(c.controls.controlsCls),\n                                r = t('\\n          <button class=\"button-decrement\">\\n            <i class=\"icon-decrement\"></i>\\n          </button>\\n        '),\n                                i = t('\\n          <button class=\"button-increment\">\\n            <i class=\"icon-decrement icon-increment\"></i>\\n          </button>\\n        '),\n                                u = t(\"<span>\".concat(a[n], \"</span>\")).addClass(c.controls.counterCls);\n                            e.children(\"div\").addClass(c.controls.displayCls), o.append(r, u, i), \"right\" === c.controls.position ? e.append(o) : e.prepend(o), r.click(function (t) {\n                                var e = c.items, o = c.minItems, r = c.beforeDecrement, i = c.onChange;\n                                r(n, a) && l > o && a[n] > e[n].minCount && (a[n] -= 1, l -= 1, u.html(a[n]), s(), i(n, a[n], l)), t.preventDefault()\n                            }), i.click(function (t) {\n                                var e = c.items, o = c.maxItems, r = c.beforeIncrement, i = c.onChange;\n                                r(n, a) && l < o && a[n] < e[n].maxCount && (a[n] += 1, l += 1, u.html(a[n]), s(), i(n, a[n], l)), t.preventDefault()\n                            }), e.click(function (t) {\n                                return t.stopPropagation()\n                            })\n                        }(e, n)\n                    }), s()\n                }), this\n            }\n        }(jQuery)\n    }, function (t, n, e) {\n    }])\n});\n//# sourceMappingURL=item-quantity-dropdown.min.js.map","/*\n * pagination.js 2.1.4\n * A jQuery plugin to provide simple yet fully customisable pagination.\n * https://github.com/superRaytin/paginationjs\n *\n * Homepage: http://pagination.js.org\n *\n * Copyright 2014-2100, superRaytin\n * Released under the MIT license.\n */\n\n(function(global, $) {\n\n  if (typeof $ === 'undefined') {\n    throwError('Pagination requires jQuery.');\n  }\n\n  var pluginName = 'pagination';\n\n  var pluginHookMethod = 'addHook';\n\n  var eventPrefix = '__pagination-';\n\n  // Conflict, use backup\n  if ($.fn.pagination) {\n    pluginName = 'pagination2';\n  }\n\n  $.fn[pluginName] = function(options) {\n\n    if (typeof options === 'undefined') {\n      return this;\n    }\n\n    var container = $(this);\n\n    var attributes = $.extend({}, $.fn[pluginName].defaults, options);\n\n    var pagination = {\n\n      initialize: function() {\n        var self = this;\n\n        // Cache attributes of current instance\n        if (!container.data('pagination')) {\n          container.data('pagination', {});\n        }\n\n        if (self.callHook('beforeInit') === false) return;\n\n        // Pagination has been initialized, destroy it\n        if (container.data('pagination').initialized) {\n          $('.paginationjs', container).remove();\n        }\n\n        // Whether to disable Pagination at the initialization\n        self.disabled = !!attributes.disabled;\n\n        // Model will be passed to the callback function\n        var model = self.model = {\n          pageRange: attributes.pageRange,\n          pageSize: attributes.pageSize\n        };\n\n        // dataSource`s type is unknown, parse it to find true data\n        self.parseDataSource(attributes.dataSource, function(dataSource) {\n\n          // Currently in asynchronous mode\n          self.isAsync = Helpers.isString(dataSource);\n          if (Helpers.isArray(dataSource)) {\n            model.totalNumber = attributes.totalNumber = dataSource.length;\n          }\n\n          // Currently in asynchronous mode and a totalNumberLocator is specified\n          self.isDynamicTotalNumber = self.isAsync && attributes.totalNumberLocator;\n\n          var el = self.render(true);\n\n          // Add extra className to the pagination element\n            if (attributes.className) {\n            el.addClass(attributes.className);\n          }\n\n          model.el = el;\n\n          // Append/prepend pagination element to the container\n          container[attributes.position === 'bottom' ? 'append' : 'prepend'](el);\n\n          // Bind events\n          self.observer();\n\n          // Pagination is currently initialized\n          container.data('pagination').initialized = true;\n\n          // Will be invoked after initialized\n          self.callHook('afterInit', el);\n        });\n      },\n\n      render: function(isBoot) {\n        var self = this;\n        var model = self.model;\n        var el = model.el || $('<div class=\"paginationjs\"></div>');\n        var isForced = isBoot !== true;\n\n        self.callHook('beforeRender', isForced);\n\n        var currentPage = model.pageNumber || attributes.pageNumber;\n        var pageRange = attributes.pageRange || 0;\n        var totalPage = self.getTotalPage();\n\n        var rangeStart = currentPage - pageRange;\n        var rangeEnd = currentPage + pageRange;\n\n        if (rangeEnd > totalPage) {\n          rangeEnd = totalPage;\n          rangeStart = totalPage - pageRange * 2;\n          rangeStart = rangeStart < 1 ? 1 : rangeStart;\n        }\n\n        if (rangeStart <= 1) {\n          rangeStart = 1;\n          rangeEnd = Math.min(pageRange * 2 + 1, totalPage);\n        }\n\n        el.html(self.generateHTML({\n          currentPage: currentPage,\n          pageRange: pageRange,\n          rangeStart: rangeStart,\n          rangeEnd: rangeEnd\n        }));\n\n        // There is only one page\n        if (attributes.hideWhenLessThanOnePage) {\n          el[totalPage <= 1 ? 'hide' : 'show']();\n        }\n\n        self.callHook('afterRender', isForced);\n\n        return el;\n      },\n\n      // Generate HTML of the pages\n      generatePageNumbersHTML: function(args) {\n        var self = this;\n        var currentPage = args.currentPage;\n        var totalPage = self.getTotalPage();\n        var rangeStart = args.rangeStart;\n        var rangeEnd = args.rangeEnd;\n        var html = '';\n        var i;\n\n        var pageLink = attributes.pageLink;\n        var ellipsisText = attributes.ellipsisText;\n\n        var classPrefix = attributes.classPrefix;\n        var activeClassName = attributes.activeClassName;\n        var disableClassName = attributes.disableClassName;\n\n        // Disable page range, display all the pages\n        if (attributes.pageRange === null) {\n          for (i = 1; i <= totalPage; i++) {\n            if (i == currentPage) {\n              html += '<li class=\"' + classPrefix + '-page J-paginationjs-page ' + activeClassName + '\" data-num=\"' + i + '\"><a>' + i + '<\\/a><\\/li>';\n            } else {\n              html += '<li class=\"' + classPrefix + '-page J-paginationjs-page\" data-num=\"' + i + '\"><a href=\"' + pageLink + '\">' + i + '<\\/a><\\/li>';\n            }\n          }\n          return html;\n        }\n\n        if (rangeStart <= 3) {\n          for (i = 1; i < rangeStart; i++) {\n            if (i == currentPage) {\n              html += '<li class=\"' + classPrefix + '-page J-paginationjs-page ' + activeClassName + '\" data-num=\"' + i + '\"><a>' + i + '<\\/a><\\/li>';\n            } else {\n              html += '<li class=\"' + classPrefix + '-page J-paginationjs-page\" data-num=\"' + i + '\"><a href=\"' + pageLink + '\">' + i + '<\\/a><\\/li>';\n            }\n          }\n        } else {\n          if (attributes.showFirstOnEllipsisShow) {\n            html += '<li class=\"' + classPrefix + '-page ' + classPrefix + '-first J-paginationjs-page\" data-num=\"1\"><a href=\"' + pageLink + '\">1<\\/a><\\/li>';\n          }\n          html += '<li class=\"' + classPrefix + '-ellipsis ' + disableClassName + '\"><a>' + ellipsisText + '<\\/a><\\/li>';\n        }\n\n        for (i = rangeStart; i <= rangeEnd; i++) {\n          if (i == currentPage) {\n            html += '<li class=\"' + classPrefix + '-page J-paginationjs-page ' + activeClassName + '\" data-num=\"' + i + '\"><a>' + i + '<\\/a><\\/li>';\n          } else {\n            html += '<li class=\"' + classPrefix + '-page J-paginationjs-page\" data-num=\"' + i + '\"><a href=\"' + pageLink + '\">' + i + '<\\/a><\\/li>';\n          }\n        }\n\n        if (rangeEnd >= totalPage - 2) {\n          for (i = rangeEnd + 1; i <= totalPage; i++) {\n            html += '<li class=\"' + classPrefix + '-page J-paginationjs-page\" data-num=\"' + i + '\"><a href=\"' + pageLink + '\">' + i + '<\\/a><\\/li>';\n          }\n        } else {\n          html += '<li class=\"' + classPrefix + '-ellipsis ' + disableClassName + '\"><a>' + ellipsisText + '<\\/a><\\/li>';\n\n          if (attributes.showLastOnEllipsisShow) {\n            html += '<li class=\"' + classPrefix + '-page ' + classPrefix + '-last J-paginationjs-page\" data-num=\"' + totalPage + '\"><a href=\"' + pageLink + '\">' + totalPage + '<\\/a><\\/li>';\n          }\n        }\n\n        return html;\n      },\n\n      // Generate HTML content from the template\n      generateHTML: function(args) {\n        var self = this;\n        var currentPage = args.currentPage;\n        var totalPage = self.getTotalPage();\n\n        var totalNumber = self.getTotalNumber();\n\n        var showPrevious = attributes.showPrevious;\n        var showNext = attributes.showNext;\n        var showPageNumbers = attributes.showPageNumbers;\n        var showNavigator = attributes.showNavigator;\n        var showGoInput = attributes.showGoInput;\n        var showGoButton = attributes.showGoButton;\n\n        var pageLink = attributes.pageLink;\n        var prevText = attributes.prevText;\n        var nextText = attributes.nextText;\n        var goButtonText = attributes.goButtonText;\n\n        var classPrefix = attributes.classPrefix;\n        var disableClassName = attributes.disableClassName;\n        var ulClassName = attributes.ulClassName;\n\n        var html = '';\n        var goInput = '<input type=\"text\" class=\"J-paginationjs-go-pagenumber\">';\n        var goButton = '<input type=\"button\" class=\"J-paginationjs-go-button\" value=\"' + goButtonText + '\">';\n        var formattedString;\n\n        var formatNavigator = $.isFunction(attributes.formatNavigator) ? attributes.formatNavigator(currentPage, totalPage, totalNumber) : attributes.formatNavigator;\n        var formatGoInput = $.isFunction(attributes.formatGoInput) ? attributes.formatGoInput(goInput, currentPage, totalPage, totalNumber) : attributes.formatGoInput;\n        var formatGoButton = $.isFunction(attributes.formatGoButton) ? attributes.formatGoButton(goButton, currentPage, totalPage, totalNumber) : attributes.formatGoButton;\n\n        var autoHidePrevious = $.isFunction(attributes.autoHidePrevious) ? attributes.autoHidePrevious() : attributes.autoHidePrevious;\n        var autoHideNext = $.isFunction(attributes.autoHideNext) ? attributes.autoHideNext() : attributes.autoHideNext;\n\n        var header = $.isFunction(attributes.header) ? attributes.header(currentPage, totalPage, totalNumber) : attributes.header;\n        var footer = $.isFunction(attributes.footer) ? attributes.footer(currentPage, totalPage, totalNumber) : attributes.footer;\n\n        // Whether to display header\n        if (header) {\n          formattedString = self.replaceVariables(header, {\n            currentPage: currentPage,\n            totalPage: totalPage,\n            totalNumber: totalNumber\n          });\n          html += formattedString;\n        }\n\n        if (showPrevious || showPageNumbers || showNext) {\n          html += '<div class=\"paginationjs-pages\">';\n\n          if (ulClassName) {\n            html += '<ul class=\"' + ulClassName + '\">';\n          } else {\n            html += '<ul>';\n          }\n\n          // Whether to display the Previous button\n          if (showPrevious) {\n            if (currentPage <= 1) {\n              if (!autoHidePrevious) {\n                html += '<li class=\"' + classPrefix + '-prev ' + disableClassName + '\"><a>' + prevText + '<\\/a><\\/li>';\n              }\n            } else {\n              html += '<li class=\"' + classPrefix + '-prev J-paginationjs-previous\" data-num=\"' + (currentPage - 1) + '\" title=\"Previous page\"><a href=\"' + pageLink + '\">' + prevText + '<\\/a><\\/li>';\n            }\n          }\n\n          // Whether to display the pages\n          if (showPageNumbers) {\n            html += self.generatePageNumbersHTML(args);\n          }\n\n          // Whether to display the Next button\n          if (showNext) {\n            if (currentPage >= totalPage) {\n              if (!autoHideNext) {\n                html += '<li class=\"' + classPrefix + '-next ' + disableClassName + '\"><a>' + nextText + '<\\/a><\\/li>';\n              }\n            } else {\n              html += '<li class=\"' + classPrefix + '-next J-paginationjs-next\" data-num=\"' + (currentPage + 1) + '\" title=\"Next page\"><a href=\"' + pageLink + '\">' + nextText + '<\\/a><\\/li>';\n            }\n          }\n          html += '<\\/ul><\\/div>';\n        }\n\n        // Whether to display the navigator\n        if (showNavigator) {\n          if (formatNavigator) {\n            formattedString = self.replaceVariables(formatNavigator, {\n              currentPage: currentPage,\n              totalPage: totalPage,\n              totalNumber: totalNumber\n            });\n            html += '<div class=\"' + classPrefix + '-nav J-paginationjs-nav\">' + formattedString + '<\\/div>';\n          }\n        }\n\n        // Whether to display the Go input\n        if (showGoInput) {\n          if (formatGoInput) {\n            formattedString = self.replaceVariables(formatGoInput, {\n              currentPage: currentPage,\n              totalPage: totalPage,\n              totalNumber: totalNumber,\n              input: goInput\n            });\n            html += '<div class=\"' + classPrefix + '-go-input\">' + formattedString + '</div>';\n          }\n        }\n\n        // Whether to display the Go button\n        if (showGoButton) {\n          if (formatGoButton) {\n            formattedString = self.replaceVariables(formatGoButton, {\n              currentPage: currentPage,\n              totalPage: totalPage,\n              totalNumber: totalNumber,\n              button: goButton\n            });\n            html += '<div class=\"' + classPrefix + '-go-button\">' + formattedString + '</div>';\n          }\n        }\n\n        // Whether to display footer\n        if (footer) {\n          formattedString = self.replaceVariables(footer, {\n            currentPage: currentPage,\n            totalPage: totalPage,\n            totalNumber: totalNumber\n          });\n          html += formattedString;\n        }\n\n        return html;\n      },\n\n      // Find totalNumber from the remote response\n      // Only available in asynchronous mode\n      findTotalNumberFromRemoteResponse: function(response) {\n        var self = this;\n        self.model.totalNumber = attributes.totalNumberLocator(response);\n      },\n\n      // Go to the specified page\n      go: function(number, callback) {\n        var self = this;\n        var model = self.model;\n\n        if (self.disabled) return;\n\n        var pageNumber = number;\n        pageNumber = parseInt(pageNumber);\n\n        // Page number is out of bounds\n        if (!pageNumber || pageNumber < 1) return;\n\n        var pageSize = attributes.pageSize;\n        var totalNumber = self.getTotalNumber();\n        var totalPage = self.getTotalPage();\n\n        // Page number is out of bounds\n        if (totalNumber > 0) {\n          if (pageNumber > totalPage) return;\n        }\n\n        // Pick data fragment in synchronous mode\n        if (!self.isAsync) {\n          render(self.getDataFragment(pageNumber));\n          return;\n        }\n\n        var postData = {};\n        var alias = attributes.alias || {};\n        postData[alias.pageSize ? alias.pageSize : 'pageSize'] = pageSize;\n        postData[alias.pageNumber ? alias.pageNumber : 'pageNumber'] = pageNumber;\n\n        var ajaxParams = $.isFunction(attributes.ajax) ? attributes.ajax() : attributes.ajax;\n        var formatAjaxParams = {\n          type: 'get',\n          cache: false,\n          data: {},\n          contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n          dataType: 'json',\n          async: true\n        };\n\n        $.extend(true, formatAjaxParams, ajaxParams);\n        $.extend(formatAjaxParams.data, postData);\n\n        formatAjaxParams.url = attributes.dataSource;\n        formatAjaxParams.success = function(response) {\n          if (self.isDynamicTotalNumber) {\n            self.findTotalNumberFromRemoteResponse(response);\n          } else {\n            self.model.totalNumber = attributes.totalNumber;\n          }\n\n          var finalData = self.filterDataByLocator(response);\n          render(finalData);\n        };\n        formatAjaxParams.error = function(jqXHR, textStatus, errorThrown) {\n          attributes.formatAjaxError && attributes.formatAjaxError(jqXHR, textStatus, errorThrown);\n          self.enable();\n        };\n\n        self.disable();\n\n        $.ajax(formatAjaxParams);\n\n        function render(data) {\n          // Will be invoked before paging\n          if (self.callHook('beforePaging', pageNumber) === false) return false;\n\n          // Pagination direction\n          model.direction = typeof model.pageNumber === 'undefined' ? 0 : (pageNumber > model.pageNumber ? 1 : -1);\n\n          model.pageNumber = pageNumber;\n\n          self.render();\n\n          if (self.disabled && self.isAsync) {\n            // enable pagination\n            self.enable();\n          }\n\n          // cache model data\n          container.data('pagination').model = model;\n\n          // format result data before callback invoked\n          if (attributes.formatResult) {\n            var cloneData = $.extend(true, [], data);\n            if (!Helpers.isArray(data = attributes.formatResult(cloneData))) {\n              data = cloneData;\n            }\n          }\n\n          container.data('pagination').currentPageData = data;\n\n          // invoke callback\n          self.doCallback(data, callback);\n\n          self.callHook('afterPaging', pageNumber);\n\n          // pageNumber now is the first page\n          if (pageNumber == 1) {\n            self.callHook('afterIsFirstPage');\n          }\n\n          // pageNumber now is the last page\n          if (pageNumber == self.getTotalPage()) {\n            self.callHook('afterIsLastPage');\n          }\n        }\n      },\n\n      doCallback: function(data, customCallback) {\n        var self = this;\n        var model = self.model;\n\n        if ($.isFunction(customCallback)) {\n          customCallback(data, model);\n        } else if ($.isFunction(attributes.callback)) {\n          attributes.callback(data, model);\n        }\n      },\n\n      destroy: function() {\n        // Before destroy\n        if (this.callHook('beforeDestroy') === false) return;\n\n        this.model.el.remove();\n        container.off();\n\n        // Remove style element\n        $('#paginationjs-style').remove();\n\n        // After destroyed\n        this.callHook('afterDestroy');\n      },\n\n      previous: function(callback) {\n        this.go(this.model.pageNumber - 1, callback);\n      },\n\n      next: function(callback) {\n        this.go(this.model.pageNumber + 1, callback);\n      },\n\n      disable: function() {\n        var self = this;\n        var source = self.isAsync ? 'async' : 'sync';\n\n        // Before disabled\n        if (self.callHook('beforeDisable', source) === false) return;\n\n        self.disabled = true;\n        self.model.disabled = true;\n\n        // After disabled\n        self.callHook('afterDisable', source);\n      },\n\n      enable: function() {\n        var self = this;\n        var source = self.isAsync ? 'async' : 'sync';\n\n        // Before enabled\n        if (self.callHook('beforeEnable', source) === false) return;\n\n        self.disabled = false;\n        self.model.disabled = false;\n\n        // After enabled\n        self.callHook('afterEnable', source);\n      },\n\n      refresh: function(callback) {\n        this.go(this.model.pageNumber, callback);\n      },\n\n      show: function() {\n        var self = this;\n\n        if (self.model.el.is(':visible')) return;\n\n        self.model.el.show();\n      },\n\n      hide: function() {\n        var self = this;\n\n        if (!self.model.el.is(':visible')) return;\n\n        self.model.el.hide();\n      },\n\n      // Parse variables in the template\n      replaceVariables: function(template, variables) {\n        var formattedString;\n\n        for (var key in variables) {\n          var value = variables[key];\n          var regexp = new RegExp('<%=\\\\s*' + key + '\\\\s*%>', 'img');\n\n          formattedString = (formattedString || template).replace(regexp, value);\n        }\n\n        return formattedString;\n      },\n\n      // Get data fragment\n      getDataFragment: function(number) {\n        var pageSize = attributes.pageSize;\n        var dataSource = attributes.dataSource;\n        var totalNumber = this.getTotalNumber();\n\n        var start = pageSize * (number - 1) + 1;\n        var end = Math.min(number * pageSize, totalNumber);\n\n        return dataSource.slice(start - 1, end);\n      },\n\n      // Get total number\n      getTotalNumber: function() {\n        return this.model.totalNumber || attributes.totalNumber || 0;\n      },\n\n      // Get total page\n      getTotalPage: function() {\n        return Math.ceil(this.getTotalNumber() / attributes.pageSize);\n      },\n\n      // Get locator\n      getLocator: function(locator) {\n        var result;\n\n        if (typeof locator === 'string') {\n          result = locator;\n        } else if ($.isFunction(locator)) {\n          result = locator();\n        } else {\n          throwError('\"locator\" is incorrect. (String | Function)');\n        }\n\n        return result;\n      },\n\n      // Filter data by \"locator\"\n      filterDataByLocator: function(dataSource) {\n        var locator = this.getLocator(attributes.locator);\n        var filteredData;\n\n        // Datasource is an Object, use \"locator\" to locate the true data\n        if (Helpers.isObject(dataSource)) {\n          try {\n            $.each(locator.split('.'), function(index, item) {\n              filteredData = (filteredData ? filteredData : dataSource)[item];\n            });\n          }\n          catch (e) {\n          }\n\n          if (!filteredData) {\n            throwError('dataSource.' + locator + ' is undefined.');\n          } else if (!Helpers.isArray(filteredData)) {\n            throwError('dataSource.' + locator + ' must be an Array.');\n          }\n        }\n\n        return filteredData || dataSource;\n      },\n\n      // Parse dataSource\n      parseDataSource: function(dataSource, callback) {\n        var self = this;\n\n        if (Helpers.isObject(dataSource)) {\n          callback(attributes.dataSource = self.filterDataByLocator(dataSource));\n        } else if (Helpers.isArray(dataSource)) {\n          callback(attributes.dataSource = dataSource);\n        } else if ($.isFunction(dataSource)) {\n          attributes.dataSource(function(data) {\n            if (!Helpers.isArray(data)) {\n              throwError('The parameter of \"done\" Function should be an Array.');\n            }\n            self.parseDataSource.call(self, data, callback);\n          });\n        } else if (typeof dataSource === 'string') {\n          if (/^https?|file:/.test(dataSource)) {\n            attributes.ajaxDataType = 'jsonp';\n          }\n          callback(dataSource);\n        } else {\n          throwError('Unexpected type of \"dataSource\".');\n        }\n      },\n\n      callHook: function(hook) {\n        var paginationData = container.data('pagination');\n        var result;\n\n        var args = Array.prototype.slice.apply(arguments);\n        args.shift();\n\n        if (attributes[hook] && $.isFunction(attributes[hook])) {\n          if (attributes[hook].apply(global, args) === false) {\n            result = false;\n          }\n        }\n\n        if (paginationData.hooks && paginationData.hooks[hook]) {\n          $.each(paginationData.hooks[hook], function(index, item) {\n            if (item.apply(global, args) === false) {\n              result = false;\n            }\n          });\n        }\n\n        return result !== false;\n      },\n\n      observer: function() {\n        var self = this;\n        var el = self.model.el;\n\n        // Go to specified page number\n        container.on(eventPrefix + 'go', function(event, pageNumber, done) {\n          pageNumber = parseInt($.trim(pageNumber));\n\n          if (!pageNumber) return;\n\n          if (!$.isNumeric(pageNumber)) {\n            throwError('\"pageNumber\" is incorrect. (Number)');\n          }\n\n          self.go(pageNumber, done);\n        });\n\n        // Page number button click\n        el.delegate('.J-paginationjs-page', 'click', function(event) {\n          var current = $(event.currentTarget);\n          var pageNumber = $.trim(current.attr('data-num'));\n\n          if (!pageNumber || current.hasClass(attributes.disableClassName) || current.hasClass(attributes.activeClassName)) return;\n\n          // Before page button clicked\n          if (self.callHook('beforePageOnClick', event, pageNumber) === false) return false;\n\n          self.go(pageNumber);\n\n          // After page button clicked\n          self.callHook('afterPageOnClick', event, pageNumber);\n\n          if (!attributes.pageLink) return false;\n        });\n\n        // Previous button click\n        el.delegate('.J-paginationjs-previous', 'click', function(event) {\n          var current = $(event.currentTarget);\n          var pageNumber = $.trim(current.attr('data-num'));\n\n          if (!pageNumber || current.hasClass(attributes.disableClassName)) return;\n\n          // Before previous clicked\n          if (self.callHook('beforePreviousOnClick', event, pageNumber) === false) return false;\n\n          self.go(pageNumber);\n\n          // After previous clicked\n          self.callHook('afterPreviousOnClick', event, pageNumber);\n\n          if (!attributes.pageLink) return false;\n        });\n\n        // Next button click\n        el.delegate('.J-paginationjs-next', 'click', function(event) {\n          var current = $(event.currentTarget);\n          var pageNumber = $.trim(current.attr('data-num'));\n\n          if (!pageNumber || current.hasClass(attributes.disableClassName)) return;\n\n          // Before next clicked\n          if (self.callHook('beforeNextOnClick', event, pageNumber) === false) return false;\n\n          self.go(pageNumber);\n\n          // After next clicked\n          self.callHook('afterNextOnClick', event, pageNumber);\n\n          if (!attributes.pageLink) return false;\n        });\n\n        // Go button click\n        el.delegate('.J-paginationjs-go-button', 'click', function(event) {\n          var pageNumber = $('.J-paginationjs-go-pagenumber', el).val();\n\n          // Before Go button clicked\n          if (self.callHook('beforeGoButtonOnClick', event, pageNumber) === false) return false;\n\n          container.trigger(eventPrefix + 'go', pageNumber);\n\n          // After Go button clicked\n          self.callHook('afterGoButtonOnClick', event, pageNumber);\n        });\n\n        // go input enter\n        el.delegate('.J-paginationjs-go-pagenumber', 'keyup', function(event) {\n          if (event.which === 13) {\n            var pageNumber = $(event.currentTarget).val();\n\n            // Before Go input enter\n            if (self.callHook('beforeGoInputOnEnter', event, pageNumber) === false) return false;\n\n            container.trigger(eventPrefix + 'go', pageNumber);\n\n            // Regains focus\n            $('.J-paginationjs-go-pagenumber', el).focus();\n\n            // After Go input enter\n            self.callHook('afterGoInputOnEnter', event, pageNumber);\n          }\n        });\n\n        // Previous page\n        container.on(eventPrefix + 'previous', function(event, done) {\n          self.previous(done);\n        });\n\n        // Next page\n        container.on(eventPrefix + 'next', function(event, done) {\n          self.next(done);\n        });\n\n        // Disable\n        container.on(eventPrefix + 'disable', function() {\n          self.disable();\n        });\n\n        // Enable\n        container.on(eventPrefix + 'enable', function() {\n          self.enable();\n        });\n\n        // Refresh\n        container.on(eventPrefix + 'refresh', function(event, done) {\n          self.refresh(done);\n        });\n\n        // Show\n        container.on(eventPrefix + 'show', function() {\n          self.show();\n        });\n\n        // Hide\n        container.on(eventPrefix + 'hide', function() {\n          self.hide();\n        });\n\n        // Destroy\n        container.on(eventPrefix + 'destroy', function() {\n          self.destroy();\n        });\n\n        // Whether to load the default page\n        var validTotalPage = Math.max(self.getTotalPage(), 1)\n        var defaultPageNumber = attributes.pageNumber;\n        // Default pageNumber should be 1 when totalNumber is dynamic\n        if (self.isDynamicTotalNumber) {\n          defaultPageNumber = 1;\n        }\n        if (attributes.triggerPagingOnInit) {\n          container.trigger(eventPrefix + 'go', Math.min(defaultPageNumber, validTotalPage));\n        }\n      }\n    };\n\n    // Pagination has been initialized\n    if (container.data('pagination') && container.data('pagination').initialized === true) {\n      // Handle events\n      if ($.isNumeric(options)) {\n        // eg: container.pagination(5)\n        container.trigger.call(this, eventPrefix + 'go', options, arguments[1]);\n        return this;\n      } else if (typeof options === 'string') {\n        var args = Array.prototype.slice.apply(arguments);\n        args[0] = eventPrefix + args[0];\n\n        switch (options) {\n          case 'previous':\n          case 'next':\n          case 'go':\n          case 'disable':\n          case 'enable':\n          case 'refresh':\n          case 'show':\n          case 'hide':\n          case 'destroy':\n            container.trigger.apply(this, args);\n            break;\n          // Get selected page number\n          case 'getSelectedPageNum':\n            if (container.data('pagination').model) {\n              return container.data('pagination').model.pageNumber;\n            } else {\n              return container.data('pagination').attributes.pageNumber;\n            }\n          // Get total page\n          case 'getTotalPage':\n            return Math.ceil(container.data('pagination').model.totalNumber / container.data('pagination').model.pageSize);\n          // Get data of selected page\n          case 'getSelectedPageData':\n            return container.data('pagination').currentPageData;\n          // Whether pagination has been disabled\n          case 'isDisabled':\n            return container.data('pagination').model.disabled === true;\n          default:\n            throwError('Unknown action: ' + options);\n        }\n        return this;\n      } else {\n        // Uninstall the old instance before initializing a new one\n        uninstallPlugin(container);\n      }\n    } else {\n      if (!Helpers.isObject(options)) throwError('Illegal options');\n    }\n\n    // Check parameters\n    parameterChecker(attributes);\n\n    pagination.initialize();\n\n    return this;\n  };\n\n  // Instance defaults\n  $.fn[pluginName].defaults = {\n\n    // Data source\n    // Array | String | Function | Object\n    //dataSource: '',\n\n    // String | Function\n    //locator: 'data',\n\n    // Find totalNumber from remote response, the totalNumber will be ignored when totalNumberLocator is specified\n    // Function\n    //totalNumberLocator: function() {},\n\n    // Total entries\n    totalNumber: 0,\n\n    // Default page\n    pageNumber: 1,\n\n    // entries of per page\n    pageSize: 10,\n\n    // Page range (pages on both sides of the current page)\n    pageRange: 2,\n\n    // Whether to display the 'Previous' button\n    showPrevious: true,\n\n    // Whether to display the 'Next' button\n    showNext: true,\n\n    // Whether to display the page buttons\n    showPageNumbers: true,\n\n    showNavigator: false,\n\n    // Whether to display the 'Go' input\n    showGoInput: false,\n\n    // Whether to display the 'Go' button\n    showGoButton: false,\n\n    // Page link\n    pageLink: '',\n\n    // 'Previous' text\n    prevText: '&laquo;',\n\n    // 'Next' text\n    nextText: '&raquo;',\n\n    // Ellipsis text\n    ellipsisText: '...',\n\n    // 'Go' button text\n    goButtonText: 'Go',\n\n    // Additional className for Pagination element\n    //className: '',\n\n    classPrefix: 'paginationjs',\n\n    // Default active class\n    activeClassName: 'active',\n\n    // Default disable class\n    disableClassName: 'disabled',\n\n    //ulClassName: '',\n\n    // Whether to insert inline style\n    inlineStyle: true,\n\n    formatNavigator: '<%= currentPage %> / <%= totalPage %>',\n\n    formatGoInput: '<%= input %>',\n\n    formatGoButton: '<%= button %>',\n\n    // Pagination element's position in the container\n    position: 'bottom',\n\n    // Auto hide previous button when current page is the first page\n    autoHidePrevious: false,\n\n    // Auto hide next button when current page is the last page\n    autoHideNext: false,\n\n    //header: '',\n\n    //footer: '',\n\n    // Aliases for custom pagination parameters\n    //alias: {},\n\n    // Whether to trigger pagination at initialization\n    triggerPagingOnInit: true,\n\n    // Whether to hide pagination when less than one page\n    hideWhenLessThanOnePage: false,\n\n    showFirstOnEllipsisShow: true,\n\n    showLastOnEllipsisShow: true,\n\n    // Pagination callback\n    callback: function() {}\n  };\n\n  // Hook register\n  $.fn[pluginHookMethod] = function(hook, callback) {\n    if (arguments.length < 2) {\n      throwError('Missing argument.');\n    }\n\n    if (!$.isFunction(callback)) {\n      throwError('callback must be a function.');\n    }\n\n    var container = $(this);\n    var paginationData = container.data('pagination');\n\n    if (!paginationData) {\n      container.data('pagination', {});\n      paginationData = container.data('pagination');\n    }\n\n    !paginationData.hooks && (paginationData.hooks = {});\n\n    //paginationData.hooks[hook] = callback;\n    paginationData.hooks[hook] = paginationData.hooks[hook] || [];\n    paginationData.hooks[hook].push(callback);\n\n  };\n\n  // Static method\n  $[pluginName] = function(selector, options) {\n    if (arguments.length < 2) {\n      throwError('Requires two parameters.');\n    }\n\n    var container;\n\n    // 'selector' is a jQuery object\n    if (typeof selector !== 'string' && selector instanceof jQuery) {\n      container = selector;\n    } else {\n      container = $(selector);\n    }\n\n    if (!container.length) return;\n\n    container.pagination(options);\n\n    return container;\n  };\n\n  // ============================================================\n  // helpers\n  // ============================================================\n\n  var Helpers = {};\n\n  // Throw error\n  function throwError(content) {\n    throw new Error('Pagination: ' + content);\n  }\n\n  // Check parameters\n  function parameterChecker(args) {\n    if (!args.dataSource) {\n      throwError('\"dataSource\" is required.');\n    }\n\n    if (typeof args.dataSource === 'string') {\n      if (args.totalNumberLocator === undefined) {\n        if (args.totalNumber === undefined) {\n          throwError('\"totalNumber\" is required.');\n        } else if (!$.isNumeric(args.totalNumber)) {\n          throwError('\"totalNumber\" is incorrect. (Number)');\n        }\n      } else {\n        if (!$.isFunction(args.totalNumberLocator)) {\n          throwError('\"totalNumberLocator\" should be a Function.');\n        }\n      }\n    } else if (Helpers.isObject(args.dataSource)) {\n      if (typeof args.locator === 'undefined') {\n        throwError('\"dataSource\" is an Object, please specify \"locator\".');\n      } else if (typeof args.locator !== 'string' && !$.isFunction(args.locator)) {\n        throwError('' + args.locator + ' is incorrect. (String | Function)');\n      }\n    }\n\n    if (args.formatResult !== undefined && !$.isFunction(args.formatResult)) {\n      throwError('\"formatResult\" should be a Function.');\n    }\n  }\n\n  // uninstall plugin\n  function uninstallPlugin(target) {\n    var events = ['go', 'previous', 'next', 'disable', 'enable', 'refresh', 'show', 'hide', 'destroy'];\n\n    // off events of old instance\n    $.each(events, function(index, value) {\n      target.off(eventPrefix + value);\n    });\n\n    // reset pagination data\n    target.data('pagination', {});\n\n    // remove old\n    $('.paginationjs', target).remove();\n  }\n\n  // Object type detection\n  function getObjectType(object, tmp) {\n    return ( (tmp = typeof(object)) == \"object\" ? object == null && \"null\" || Object.prototype.toString.call(object).slice(8, -1) : tmp ).toLowerCase();\n  }\n\n  $.each(['Object', 'Array', 'String'], function(index, name) {\n    Helpers['is' + name] = function(object) {\n      return getObjectType(object) === name.toLowerCase();\n    };\n  });\n\n  /*\n   * export via AMD or CommonJS\n   * */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return $;\n    });\n  }\n\n})(this, window.jQuery);\n"],"names":[],"sourceRoot":""}